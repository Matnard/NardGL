{"id":"0Upb","dependencies":[{"name":"/home/matnard/Lab/NardGL/demo-0/package.json","includedInParent":true,"mtime":1565906530253}],"generated":{"js":"module.exports=\"#define GLSLIFY 1\\nout lowp vec4 color;\\t//Color to send to fragment shader.\\n\\nvoid main() {\\n  color = COLOR_0;\\n  gl_PointSize = 15.0;\\n  vec4 modelPosition = u_modelMatrix * vec4(POSITION, 1.0);\\n  gl_Position = u_projectionMatrix * u_viewMatrix * modelPosition;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"source":"Quad/vertex.glsl","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"Quad/vertex.glsl","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"Quad/vertex.glsl","original":{"line":1,"column":15},"generated":{"line":1,"column":15}}],"sources":{"Quad/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nout lowp vec4 color;\\t//Color to send to fragment shader.\\n\\nvoid main() {\\n  color = COLOR_0;\\n  gl_PointSize = 15.0;\\n  vec4 modelPosition = u_modelMatrix * vec4(POSITION, 1.0);\\n  gl_Position = u_projectionMatrix * u_viewMatrix * modelPosition;\\n}\";"},"lineCount":null}},"error":null,"hash":"9a809005a417398b0fc205ea8e46ae60","cacheData":{"env":{}}}