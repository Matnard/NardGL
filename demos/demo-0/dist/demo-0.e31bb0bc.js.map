{"version":3,"sources":["../package.json","../node_modules/@nardgl/console-greeting/src/index.js","../node_modules/@nardgl/loader/src/index.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/common.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2d.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat3.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat4.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec3.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec4.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat2.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec2.js","../node_modules/@nardgl/core/node_modules/gl-matrix/esm/index.js","../node_modules/@nardgl/core/src/m4.js","../node_modules/@nardgl/core/src/Transform/index.js","../node_modules/@nardgl/core/src/Camera/index.js","../node_modules/@nardgl/core/src/utils.js","../node_modules/@nardgl/core/src/Shader/index.js","../node_modules/@nardgl/core/src/Material/index.js","../node_modules/@nardgl/core/src/Material/BasicMaterial/index.js","../node_modules/@nardgl/core/src/Material/PbrMetallicRoughnessMaterial/index.js","../node_modules/@nardgl/core/src/Attribute.js","../node_modules/@nardgl/core/src/Uniform.js","../node_modules/@nardgl/core/src/TextureUniform.js","../node_modules/@nardgl/core/src/TextureCubeUniform.js","../node_modules/@nardgl/core/src/Primitive/index.js","../node_modules/@nardgl/core/src/Primitive/GltfPrimitive.js","../node_modules/@nardgl/core/src/WebGLRenderer.js","../node_modules/@nardgl/core/src/Vertex.js","../node_modules/@nardgl/core/src/Geometry.js","../node_modules/@nardgl/core/src/index.js","../node_modules/@nardgl/gltf-parser/src/index.js","../node_modules/@nardgl/utils/src/Grid/fragment.glsl","../node_modules/@nardgl/utils/src/Grid/vertex.glsl","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/common.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2d.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat3.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat4.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec3.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec4.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat2.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec2.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/node_modules/gl-matrix/esm/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/m4.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Transform/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Camera/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/utils.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Shader/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Material/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Material/BasicMaterial/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Material/PbrMetallicRoughnessMaterial/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Attribute.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Uniform.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/TextureUniform.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/TextureCubeUniform.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Primitive/index.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Primitive/GltfPrimitive.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/WebGLRenderer.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Vertex.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/Geometry.js","../node_modules/@nardgl/utils/node_modules/@nardgl/core/src/index.js","../node_modules/@nardgl/utils/src/Grid/index.js","../node_modules/@nardgl/utils/src/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/common.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat2d.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat3.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/mat4.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec3.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec4.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/quat2.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/vec2.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/node_modules/gl-matrix/esm/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/m4.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Transform/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Camera/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/utils.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Shader/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Material/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Material/BasicMaterial/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Material/PbrMetallicRoughnessMaterial/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Attribute.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Uniform.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/TextureUniform.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/TextureCubeUniform.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Primitive/index.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Primitive/GltfPrimitive.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/WebGLRenderer.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Vertex.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/Geometry.js","../node_modules/@nardgl/primitives/node_modules/@nardgl/core/src/index.js","../node_modules/@nardgl/primitives/src/PlaneGeometry/index.js","../node_modules/@nardgl/primitives/src/CubeGeometry/index.js","../node_modules/@nardgl/primitives/src/index.js","index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","Particles/vertex.glsl","Particles/fragment.glsl","Particles/index.js","Quad/vertex.glsl","Quad/fragment.glsl","Quad/index.js","TexturedCube/vertex.glsl","TexturedCube/fragment.glsl","TexturedCube/index.js","../../../../.nvm/versions/node/v10.15.3/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["module","exports","consoleGreeting","name","version","styles","console","log","batchLoad","promises","onProgress","count","length","resolved","forEach","p","then","Promise","all","loadAsset","arg","url","mimeType","fetch","res","blob","type","thenFn","blobToImg","blobToJson","blobToText","result","asset","resolve","reject","fr","FileReader","onload","onerror","err","readAsText","JSON","parse","URL","createObjectURL","img","Image","src","Loader","constructor","conf","loaders","assets","map","x","waitingScreen","document","createElement","style","backgroundColor","width","height","position","zIndex","display","justifyContent","alignItems","logo","appendChild","body","add","push","addArray","assetUrls","concat","start","progress","data","removeChild","reduce","a","b","Object","keys","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","degree","PI","toRadian","equals","abs","max","hypot","y","i","arguments","sqrt","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","acos","zero","div","dist","sqrDist","sqrLen","vec","stride","offset","fn","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2","reduceArgsWithFn","input","rotationX","rotationY","rotationZ","depth","multiplyAll","m4","tz","angleInRadians","Transform","matrix","rotation","transforms","Camera","computeMatrix","createShader","gl","source","shader","shaderSource","compileShader","success","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createProgramFromSource","vertexShaderSrc","fragmentShaderSrc","VERTEX_SHADER","FRAGMENT_SHADER","resizeCanvas","canvas","cssToRealPixels","window","devicePixelRatio","displayWidth","clientWidth","displayHeight","clientHeight","randomInt","range","getSize","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","getGLSLType","componentType","size","getTypedArray","srcData","Uint16Array","getBytesPerElementOfType","BYTES_PER_ELEMENT","hexToNormalizedRGB","number","g","debounce","func","wait","immediate","timeout","context","args","later","apply","callNow","clearTimeout","setTimeout","Shader","attributes","uniforms","script","Error","VertexShader","toGLSL","join","FragmentShader","Material","defaults","uniformsData","primitiveType","options","assign","vertexShaderPartial","fragmentShaderPartial","texturesData","decorated","BasicMaterial","attributesData","PbrMetallicRoughnessMaterial","AttributeCollection","key","location","getAttribLocation","CustomAttribute","_name","_type","_componentType","_data","elementsPerAttribute","label","NardAttribute","PositionAttribute","UvAttribute","NormalAttribute","Uniform","getType","Matrix2fv","Matrix3fv","Matrix4fv","check","getUniformLocation","value","passUniforms","getLocation","preSet","TextureUniform","texture","loadTexture","textureUnit","path","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","image","addEventListener","generateMipmap","activeTexture","TEXTURE0","TextureCubeUniform","TEXTURE_CUBE_MAP","targets","ctx","getContext","crossOrigin","facesRects","drawImage","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","Primitive","geometry","material","vao","hasRenderedOnce","needsUpdate","indices","getIndicesData","draw","getCount","find","update","uniform","dt","bind","attribute","extraUniforms","textureCube","initAttributes","getAttributeData","initUniforms","bindUniforms","bindAttributes","createVertexArray","bindVertexArray","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","elementsConf","usage","vertexAttribPointer","enableVertexAttribArray","GltfPrimitive","primitiveData","textureData","vertexPartial","fragmentPartial","WebGLRenderer","projectionMatrix","parentNode","overflow","margin","onResize","scene","camera","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","DEPTH_TEST","primitive","init","useProgram","updateUniforms","setUniform","viewMatrix","beforeDraw","drawConf","TRIANGLES","drawElements","UNSIGNED_SHORT","drawArrays","Vertex","acc","spaceTaken","noPartitionAttributeReduceFn","vertices","curr","entries","get","simplePartitionAttributeReduceFn","entry","getAttributeOffset","slice","Geometry","partitionStyle","NO_PARTITION","Map","vertexArr","vertex","addVertex","index","stringify","attributesMap","from","values","current","obj","GltfParser","gltf","buffers","parseB64Buffer","accessors","accessor","itemsPerType","getItemsPerType","elementBytesLength","getComponentArrayType","typedGetter","getDvMethodToRun","unpackBufferViewData","bufferView","images","bufferViews","byteLength","uint8ToUrl","materials","textureId","pbrMetallicRoughness","baseColorTexture","textures","uvsAttributeName","texCoord","buffer","b64","uri","byteCharacters","atob","split","dv","DataView","ArrayBuffer","char","setUint8","charCodeAt","bufferId","byteOffset","el","loopOffset","id","getPrimitives","meshId","primitives","meshes","byteArray","Blob","subDiv","step","verticals","horizontals","Grid","PlaneGeometry","segmentsW","segmentsH","hexColor","yUp","doubleSided","_indices","rgbColor","buildGeometry","getVertex","yi","xi","CubeGeometry","SIMPLE_PARTITION","faceId","flat","setVertices","pkg","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","handled","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","cached","cache","some","cb","Particles","Quad","NARD","TexturedCube","urls","quadGltfUrl","texturedCubeGltfUrl","renderer","particles","grid","cube","quad","fps","fpsInterval","Date","now","onEnterFrame","requestAnimationFrame","elapsed","render"],"mappings":"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","file":"demo-0.e31bb0bc.js","sourceRoot":"..","sourcesContent":["module.exports = {\n  \"name\": \"nardgl\",\n  \"version\": \"1.3.1\",\n  \"description\": \"My graphics library\",\n  \"keywords\": [\n    \"webgl\",\n    \"gltf\"\n  ],\n  \"source\": true,\n  \"author\": \"Mathieu Mence <Mathieu.Mence@matnard.com>\",\n  \"homepage\": \"https://github.com/Matnard/NardGL#readme\",\n  \"license\": \"MIT\",\n  \"main\": \"lib/nardgl.js\",\n  \"directories\": {\n    \"lib\": \"lib\",\n    \"test\": \"__tests__\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Matnard/NardGL.git\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: run tests from root\\\" && exit 1\",\n    \"build\": \"parcel build ./src/index.js --out-dir lib --out-file nardgl.js\",\n    \"watch\": \"parcel watch ./src/index.js --out-dir lib --out-file nardgl.js\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/Matnard/NardGL/issues\"\n  },\n  \"dependencies\": {\n    \"@nardgl/console-greeting\": \"^1.0.0-alpha.0\",\n    \"@nardgl/core\": \"^0.1.3\",\n    \"@nardgl/gltf-parser\": \"^1.0.2-alpha.0\",\n    \"@nardgl/loader\": \"^1.1.0-alpha.0\",\n    \"@nardgl/primitives\": \"^0.2.1\",\n    \"@nardgl/utils\": \"^0.0.7\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.6.2\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.5.5\",\n    \"parcel-bundler\": \"^1.12.3\"\n  },\n  \"gitHead\": \"0f0c0417ffcfc488f89ab295d6dd84c13babbe75\"\n}\n;","export default function consoleGreeting(name, version) {\n  const styles = `\n\tpadding-bottom: 17ch;\n\tpadding-right: 17ch;\n\tcolor: white;\n\tbackground: white;\n\ttext-shadow:0ch 1ch 0#ffffff,1ch 1ch 0#ffffff,2ch 1ch 0#ffffff,3ch 1ch 0#ffffff,4ch 1ch 0#ffffff,5ch 1ch 0#ffffff,6ch 1ch 0#ffffff,7ch 1ch 0#ffffff,8ch 1ch 0#ffffff,9ch 1ch 0#ffffff,10ch 1ch 0#ffffff,11ch 1ch 0#ffffff,12ch 1ch 0#ffffff,13ch 1ch 0#ffffff,14ch 1ch 0#ffffff,15ch 1ch 0#ffffff,16ch 1ch 0#ffffff,0ch 2ch 0#ffffff,1ch 2ch 0#ffffff,2ch 2ch 0#ffffff,3ch 2ch 0#ffffff,4ch 2ch 0#ffffff,5ch 2ch 0#ffffff,6ch 2ch 0#ffffff,7ch 2ch 0#764719,8ch 2ch 0#764719,9ch 2ch 0#a86727,10ch 2ch 0#a86727,11ch 2ch 0#ffffff,12ch 2ch 0#ffffff,13ch 2ch 0#ffffff,14ch 2ch 0#ffffff,15ch 2ch 0#ffffff,16ch 2ch 0#ffffff,0ch 3ch 0#ffffff,1ch 3ch 0#ffffff,2ch 3ch 0#ffffff,3ch 3ch 0#ffffff,4ch 3ch 0#ffffff,5ch 3ch 0#764719,6ch 3ch 0#764719,7ch 3ch 0#a86727,8ch 3ch 0#a86727,9ch 3ch 0#cc7c33,10ch 3ch 0#cc7c33,11ch 3ch 0#a86727,12ch 3ch 0#a86727,13ch 3ch 0#ffffff,14ch 3ch 0#ffffff,15ch 3ch 0#ffffff,16ch 3ch 0#ffffff,0ch 4ch 0#ffffff,1ch 4ch 0#ffffff,2ch 4ch 0#ffffff,3ch 4ch 0#ffffff,4ch 4ch 0#764719,5ch 4ch 0#a86727,6ch 4ch 0#a86727,7ch 4ch 0#a86727,8ch 4ch 0#cc7c33,9ch 4ch 0#a86727,10ch 4ch 0#cc7c33,11ch 4ch 0#cc7c33,12ch 4ch 0#cc7c33,13ch 4ch 0#a86727,14ch 4ch 0#ffffff,15ch 4ch 0#ffffff,16ch 4ch 0#ffffff,0ch 5ch 0#ffffff,1ch 5ch 0#ffffff,2ch 5ch 0#ffffff,3ch 5ch 0#764719,4ch 5ch 0#a86727,5ch 5ch 0#a86727,6ch 5ch 0#a86727,7ch 5ch 0#cc7c33,8ch 5ch 0#a86727,9ch 5ch 0#cc7c33,10ch 5ch 0#a86727,11ch 5ch 0#cc7c33,12ch 5ch 0#cc7c33,13ch 5ch 0#cc7c33,14ch 5ch 0#a86727,15ch 5ch 0#ffffff,16ch 5ch 0#ffffff,0ch 6ch 0#ffffff,1ch 6ch 0#ffffff,2ch 6ch 0#ffffff,3ch 6ch 0#764719,4ch 6ch 0#a86727,5ch 6ch 0#a86727,6ch 6ch 0#a86727,7ch 6ch 0#a86727,8ch 6ch 0#cc7c33,9ch 6ch 0#cc7c33,10ch 6ch 0#cc7c33,11ch 6ch 0#cc7c33,12ch 6ch 0#cc7c33,13ch 6ch 0#cc7c33,14ch 6ch 0#a86727,15ch 6ch 0#ffffff,16ch 6ch 0#ffffff,0ch 7ch 0#ffffff,1ch 7ch 0#ffffff,2ch 7ch 0#ffffff,3ch 7ch 0#764719,4ch 7ch 0#a86727,5ch 7ch 0#a86727,6ch 7ch 0#a86727,7ch 7ch 0#cc7c33,8ch 7ch 0#cc7c33,9ch 7ch 0#cc7c33,10ch 7ch 0#cc7c33,11ch 7ch 0#cc7c33,12ch 7ch 0#cc7c33,13ch 7ch 0#cc7c33,14ch 7ch 0#a86727,15ch 7ch 0#ffffff,16ch 7ch 0#ffffff,0ch 8ch 0#ffffff,1ch 8ch 0#ffffff,2ch 8ch 0#ffffff,3ch 8ch 0#764719,4ch 8ch 0#a86727,5ch 8ch 0#a86727,6ch 8ch 0#764719,7ch 8ch 0#a86727,8ch 8ch 0#cc7c33,9ch 8ch 0#cc7c33,10ch 8ch 0#ffffff,11ch 8ch 0#ffffff,12ch 8ch 0#cc7c33,13ch 8ch 0#ffffff,14ch 8ch 0#a86727,15ch 8ch 0#ffffff,16ch 8ch 0#ffffff,0ch 9ch 0#ffffff,1ch 9ch 0#ffffff,2ch 9ch 0#ffffff,3ch 9ch 0#764719,4ch 9ch 0#a86727,5ch 9ch 0#764719,6ch 9ch 0#cc7c33,7ch 9ch 0#cc7c33,8ch 9ch 0#cc7c33,9ch 9ch 0#cc7c33,10ch 9ch 0#ffffff,11ch 9ch 0#000000,12ch 9ch 0#cc7c33,13ch 9ch 0#000000,14ch 9ch 0#a86727,15ch 9ch 0#ffffff,16ch 9ch 0#ffffff,0ch 10ch 0#b0acab,1ch 10ch 0#b0acab,2ch 10ch 0#b0acab,3ch 10ch 0#a86727,4ch 10ch 0#a86727,5ch 10ch 0#764719,6ch 10ch 0#cc7c33,7ch 10ch 0#cc7c33,8ch 10ch 0#cc7c33,9ch 10ch 0#cc7c33,10ch 10ch 0#ffffff,11ch 10ch 0#000000,12ch 10ch 0#cc7c33,13ch 10ch 0#000000,14ch 10ch 0#a86727,15ch 10ch 0#ffffff,16ch 10ch 0#ffffff,0ch 11ch 0#ebe3e0,1ch 11ch 0#ebe3e0,2ch 11ch 0#b0acab,3ch 11ch 0#a86727,4ch 11ch 0#a86727,5ch 11ch 0#764719,6ch 11ch 0#cc7c33,7ch 11ch 0#cc7c33,8ch 11ch 0#cc7c33,9ch 11ch 0#cc7c33,10ch 11ch 0#cc7c33,11ch 11ch 0#cc7c33,12ch 11ch 0#cc7c33,13ch 11ch 0#cc7c33,14ch 11ch 0#a86727,15ch 11ch 0#ffffff,16ch 11ch 0#ffffff,0ch 12ch 0#ebe3e0,1ch 12ch 0#b0acab,2ch 12ch 0#a86727,3ch 12ch 0#a86727,4ch 12ch 0#a86727,5ch 12ch 0#a86727,6ch 12ch 0#764719,7ch 12ch 0#a86727,8ch 12ch 0#cc7c33,9ch 12ch 0#ffffff,10ch 12ch 0#cc7c33,11ch 12ch 0#cc7c33,12ch 12ch 0#cc7c33,13ch 12ch 0#cc7c33,14ch 12ch 0#a86727,15ch 12ch 0#ffffff,16ch 12ch 0#ffffff,0ch 13ch 0#ebe3e0,1ch 13ch 0#b0acab,2ch 13ch 0#a86727,3ch 13ch 0#a86727,4ch 13ch 0#a86727,5ch 13ch 0#a86727,6ch 13ch 0#a86727,7ch 13ch 0#cc7c33,8ch 13ch 0#cc7c33,9ch 13ch 0#cc7c33,10ch 13ch 0#ffffff,11ch 13ch 0#ffffff,12ch 13ch 0#ffffff,13ch 13ch 0#a86727,14ch 13ch 0#ffffff,15ch 13ch 0#ffffff,16ch 13ch 0#ffffff,0ch 14ch 0#ebe3e0,1ch 14ch 0#b0acab,2ch 14ch 0#a86727,3ch 14ch 0#a86727,4ch 14ch 0#764719,5ch 14ch 0#a86727,6ch 14ch 0#a86727,7ch 14ch 0#a86727,8ch 14ch 0#cc7c33,9ch 14ch 0#cc7c33,10ch 14ch 0#cc7c33,11ch 14ch 0#cc7c33,12ch 14ch 0#cc7c33,13ch 14ch 0#a86727,14ch 14ch 0#ffffff,15ch 14ch 0#ffffff,16ch 14ch 0#ffffff,0ch 15ch 0#ebe3e0,1ch 15ch 0#ebe3e0,2ch 15ch 0#b0acab,3ch 15ch 0#a86727,4ch 15ch 0#a86727,5ch 15ch 0#764719,6ch 15ch 0#764719,7ch 15ch 0#cc7c33,8ch 15ch 0#a86727,9ch 15ch 0#a86727,10ch 15ch 0#cc7c33,11ch 15ch 0#cc7c33,12ch 15ch 0#cc7c33,13ch 15ch 0#a86727,14ch 15ch 0#ffffff,15ch 15ch 0#ffffff,16ch 15ch 0#ffffff,0ch 16ch 0#ebe3e0,1ch 16ch 0#ebe3e0,2ch 16ch 0#b0acab,3ch 16ch 0#a86727,4ch 16ch 0#a86727,5ch 16ch 0#a86727,6ch 16ch 0#a86727,7ch 16ch 0#b0acab,8ch 16ch 0#b0acab,9ch 16ch 0#b0acab,10ch 16ch 0#b0acab,11ch 16ch 0#b0acab,12ch 16ch 0#b0acab,13ch 16ch 0#ffffff,14ch 16ch 0#a86727,15ch 16ch 0#a86727,16ch 16ch 0#a86727,0ch 17ch 0#ebe3e0,1ch 17ch 0#ebe3e0,2ch 17ch 0#ebe3e0,3ch 17ch 0#b0acab,4ch 17ch 0#b0acab,5ch 17ch 0#b0acab,6ch 17ch 0#b0acab,7ch 17ch 0#b0acab,8ch 17ch 0#ebe3e0,9ch 17ch 0#ebe3e0,10ch 17ch 0#ebe3e0,11ch 17ch 0#ebe3e0,12ch 17ch 0#b0acab,13ch 17ch 0#ffffff,14ch 17ch 0#a86727,15ch 17ch 0#cc7c33,16ch 17ch 0#cc7c33;`;\n  console.log(\"%c█\", styles);\n  console.log(\n    `%c${name} v${version} by Matnard`,\n    \"background-color: black; padding: 0.75em; color:white; font-family: sans-serif; font-weight: 300;\"\n  );\n}\n","const batchLoad = function(promises, onProgress) {\n  const count = promises.length;\n  let resolved = 0;\n  promises.forEach(p => {\n    p.then(function() {\n      resolved++;\n      onProgress(resolved / count);\n    });\n  });\n\n  return Promise.all(promises);\n};\n\nconst loadAsset = function(arg) {\n  if (typeof arg === \"string\") {\n    arg = {\n      url: arg\n    };\n  }\n\n  const { url, mimeType } = arg;\n\n  return fetch(url)\n    .then(res => res.blob())\n    .then(blob => {\n      const type = mimeType || blob.type;\n\n      const thenFn = {\n        \"image/png\": blobToImg,\n        \"model/gltf+json\": blobToJson,\n        \"text/html\": blobToText\n      }[type];\n\n      return thenFn(blob);\n    })\n    .then(result => {\n      const asset = {};\n      asset[url] = result;\n      return asset;\n    });\n};\n\nconst blobToText = blob => {\n  return new Promise(function(resolve, reject) {\n    const fr = new FileReader();\n    fr.onload = function() {\n      resolve(this.result);\n    };\n    fr.onerror = function(err) {\n      reject(err);\n    };\n    fr.readAsText(blob);\n  });\n};\n\nconst blobToJson = blob => {\n  return new Promise(function(resolve, reject) {\n    const fr = new FileReader();\n    fr.onload = function() {\n      resolve(JSON.parse(this.result));\n    };\n    fr.onerror = function(err) {\n      reject(err);\n    };\n    fr.readAsText(blob);\n  });\n};\n\nconst blobToImg = blob => {\n  var url = URL.createObjectURL(blob);\n  var img = new Image();\n  img.src = url;\n  return img;\n};\n\nclass Loader {\n  constructor(conf) {\n    this.onProgress = conf.onProgress;\n    this.loaders = conf.assets.map(x => loadAsset(x)) || [];\n    this.waitingScreen = document.createElement(\"div\");\n    this.waitingScreen.style.backgroundColor = \"rgba(0,0,0,1)\";\n    this.waitingScreen.style.width = \"100%\";\n    this.waitingScreen.style.height = \"100vh\";\n    this.waitingScreen.style.position = \"fixed\";\n    this.waitingScreen.style.zIndex = \"1000\";\n    this.waitingScreen.style.display = \"flex\";\n    this.waitingScreen.style.justifyContent = \"center\";\n    this.waitingScreen.style.alignItems = \"center\";\n\n    this.logo = document.createElement(\"img\");\n    this.logo.style.width = \"50px\";\n    this.logo.src = \"https://matnard.github.io/NardGL/images/profile-51.png\";\n    this.waitingScreen.appendChild(this.logo);\n\n    document.body.appendChild(this.waitingScreen);\n  }\n\n  add(asset) {\n    this.loaders.push(loadAsset(asset));\n    return this;\n  }\n\n  addArray(assetUrls) {\n    this.loaders = this.loaders.concat(assetUrls.map(x => loadAsset(x)));\n    return this;\n  }\n\n  start() {\n    return batchLoad(this.loaders, progress => {\n      this.waitingScreen.style.backgroundColor = `rgba(0,0,0,${1 - progress})`;\n      this.onProgress(progress);\n    }).then(data => {\n      document.body.removeChild(this.waitingScreen);\n      return data.reduce((a, b) => {\n        a[Object.keys(b)[0]] = b[Object.keys(b)[0]];\n        return a;\n      }, {});\n    });\n  }\n}\n\nexport { batchLoad, loadAsset, Loader };\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","import { vec3, mat4 } from \"gl-matrix\";\n\nfunction reduceArgsWithFn(fn, input) {\n  return function() {\n    return [...arguments].reduce((a, b) => {\n      return fn(a, b);\n    }, input);\n  };\n}\n\nfunction translation(x, y, z) {\n  return mat4.fromTranslation(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction rotationX(rad) {\n  return mat4.fromXRotation(mat4.create(), rad);\n}\n\nfunction rotationY(rad) {\n  return mat4.fromYRotation(mat4.create(), rad);\n}\nfunction rotationZ(rad) {\n  return mat4.fromZRotation(mat4.create(), rad);\n}\n\nfunction scaling(x, y, z) {\n  return mat4.fromScaling(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction identity() {\n  return mat4.create();\n}\n\nfunction projection(width, height, depth) {\n  return mat4.perspective(mat4.create(), 45, width / height, 0.1, depth);\n}\n\nfunction multiply(a, b) {\n  return mat4.multiply(mat4.create(), a, b);\n}\n\nconst multiplyAll = reduceArgsWithFn(multiply, mat4.create());\n\nconst m4 = {\n  projection,\n  translation,\n  scaling,\n  multiply,\n  multiplyAll,\n  identity,\n\n  invert: function(m) {\n    return mat4.invert(mat4.create(), m);\n  },\n\n  translate: function(m, tx, ty, tz) {\n    return m4.multiply(m, m4.translation(tx, ty, tz));\n  },\n\n  rotateX: function(m, angleInRadians) {\n    return m4.multiply(m, rotationX(angleInRadians));\n  },\n\n  rotateY: function(m, angleInRadians) {\n    return m4.multiply(m, rotationY(angleInRadians));\n  },\n\n  rotateZ: function(m, angleInRadians) {\n    return m4.multiply(m, rotationZ(angleInRadians));\n  },\n\n  scale: function(m, sx, sy, sz) {\n    return m4.multiply(m, m4.scaling(sx, sy, sz));\n  }\n};\n\nexport { m4 };\n","import { m4 } from \"../m4\";\n\nclass Transform {\n  constructor() {\n    this.matrix = m4.identity();\n\n    this.translation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.rotation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.scale = {\n      x: 1,\n      y: 1,\n      z: 1\n    };\n  }\n\n  computeMatrix(m = m4.identity()) {\n    let transforms = m4.identity();\n\n    transforms = m4.scale(transforms, this.scale.x, this.scale.y, this.scale.z);\n\n    transforms = m4.rotateX(transforms, this.rotation.x);\n    transforms = m4.rotateY(transforms, this.rotation.y);\n    transforms = m4.rotateZ(transforms, this.rotation.z);\n\n    transforms = m4.translate(\n      transforms,\n      this.translation.x,\n      this.translation.y,\n      this.translation.z\n    );\n    this.matrix = m4.multiply(m, transforms);\n  }\n}\n\nexport { Transform };\n","import { Transform } from \"../Transform\";\nimport { m4 } from \"../m4\";\n\nclass Camera extends Transform {\n  get viewMatrix() {\n    this.computeMatrix();\n    return m4.invert(this.matrix);\n  }\n}\n\nexport { Camera };\n","const createShader = function(gl, type, source) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.log(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n};\n\nconst createProgram = function(gl, vertexShader, fragmentShader) {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.log(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n};\n\nconst createProgramFromSource = function(\n  gl,\n  vertexShaderSrc,\n  fragmentShaderSrc\n) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n  const fragmentShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSrc\n  );\n\n  return createProgram(gl, vertexShader, fragmentShader);\n};\n\nconst resizeCanvas = function(canvas) {\n  var cssToRealPixels = window.devicePixelRatio || 1;\n\n  var displayWidth = Math.floor(canvas.clientWidth * cssToRealPixels);\n  var displayHeight = Math.floor(canvas.clientHeight * cssToRealPixels);\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n};\n\nconst randomInt = function(range) {\n  return Math.floor(Math.random() * range);\n};\n\nconst getSize = function(type) {\n  return {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n  }[type];\n};\n\nconst getGLSLType = function(componentType, type) {\n  const size = getSize(type);\n  return {\n    5126: function(size) {\n      return {\n        1: \"float\",\n        2: \"vec2\",\n        3: \"vec3\",\n        4: \"vec4\"\n      }[size];\n    },\n    5123: function(size) {\n      return {\n        1: \"int\",\n        2: \"ivec2\",\n        3: \"ivec3\",\n        4: \"ivec4\"\n      }[size];\n    }\n  }[componentType](size);\n};\n\nconst getTypedArray = function(srcData, componentType) {\n  return new {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType](srcData);\n};\n\nconst getBytesPerElementOfType = function(componentType) {\n  return {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType].BYTES_PER_ELEMENT;\n};\n\nconst hexToNormalizedRGB = function(number) {\n  return {\n    r: (number & (0xff0000 >> 16)) / 255,\n    g: (number & (0x00ff00 >> 8)) / 255,\n    b: (number & 0x0000ff) / 255\n  };\n};\n\nconst debounce = function(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport {\n  hexToNormalizedRGB,\n  randomInt,\n  resizeCanvas,\n  createProgram,\n  createShader,\n  createProgramFromSource,\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType,\n  debounce\n};\n","import { getGLSLType } from \"../utils\";\n\nclass Shader {\n  constructor(conf) {\n    this.attributes = conf.attributes;\n    this.uniforms = conf.uniforms;\n    this.script = conf.script;\n  }\n\n  get decorated() {\n    throw new Error(\"Use either VertexShader or FragmentShader instances\");\n  }\n}\n\nclass VertexShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.attributes.map(a => a.toGLSL()).join(\"\") +\n      \"\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nclass FragmentShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nexport { Shader, VertexShader, FragmentShader };\n","import { VertexShader, FragmentShader } from \"../Shader\";\n\nclass Material {\n  static POINTS = 0;\n  static LINES = 1;\n  static TRIANGLES = 4;\n  static TRIANGLE_STRIP = 5;\n  static TRIANGLE_FAN = 6;\n\n  //stores material properties\n  constructor(conf) {\n    const defaults = {\n      uniformsData: [],\n      primitiveType: 4 //TRIANGLES\n    };\n    const options = Object.assign({}, defaults, conf);\n    this.vertexShaderPartial = options.vertexShader;\n    this.fragmentShaderPartial = options.fragmentShader;\n    this.primitiveType = options.primitiveType;\n    this.uniformsData = options.uniformsData;\n    this.texturesData = options.texturesData;\n  }\n\n  vertexShaderSrc(attributes, uniforms) {\n    return new VertexShader({\n      attributes,\n      uniforms,\n      script: this.vertexShaderPartial\n    }).decorated;\n  }\n\n  fragmentShaderSrc(uniforms) {\n    return new FragmentShader({\n      uniforms,\n      script: this.fragmentShaderPartial\n    }).decorated;\n  }\n}\n\nexport { Material };\n","import { Material } from \"../index\";\n\nclass BasicMaterial extends Material {\n  constructor(\n    attributesData,\n    uniformsData,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super({\n      uniformsData,\n      texturesData,\n      vertexShader: vertexShaderPartial,\n      fragmentShader: fragmentShaderPartial\n    });\n    this.attributesData = attributesData;\n    this.uniformsData = uniformsData;\n    this.texturesData = texturesData;\n  }\n}\n\nexport { BasicMaterial };\n","import { BasicMaterial } from \"../BasicMaterial\";\n\nclass PbrMetallicRoughnessMaterial extends BasicMaterial {\n  constructor(\n    attributes,\n    uniforms,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super(\n      attributes,\n      uniforms,\n      texturesData,\n      vertexShaderPartial,\n      fragmentShaderPartial\n    );\n  }\n}\n\nexport { PbrMetallicRoughnessMaterial };\n","import {\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType\n} from \"./utils\";\n\nclass AttributeCollection {\n  constructor(conf) {\n    if (conf.count) {\n      delete conf.count;\n    }\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  toGLSL() {\n    return `in ${getGLSLType(this.componentType, this.type)} ${this.name};\\n`;\n  }\n\n  get location() {\n    const location = this.gl.getAttribLocation(this.program, this.name);\n    if (location === -1) {\n      throw new Error(\n        `Maybe not used in shader. Haven't fount the location of the variable name \"${this.name}\"`\n      );\n    }\n    return location;\n  }\n\n  get size() {\n    return getSize(this.type);\n  }\n\n  get count() {\n    return this.srcData ? this.srcData.length / this.size : null;\n  }\n\n  get array() {\n    return getTypedArray(this.srcData, this.componentType);\n  }\n}\n\nclass CustomAttribute {\n  constructor(name, type, componentType, ...data) {\n    this._name = name;\n    this._type = type;\n    this._componentType = componentType;\n    this._data = [...data];\n    this.elementsPerAttribute = null;\n  }\n\n  get name() {\n    return !this._name ? this.constructor.label : this._name;\n  }\n\n  get type() {\n    return !this._type ? this.constructor.type : this._type;\n  }\n\n  get componentType() {\n    return !this._componentType\n      ? this.constructor.componentType\n      : this._componentType;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get spaceTaken() {\n    return this.data.length * getBytesPerElementOfType(this.componentType);\n  }\n}\n\nclass NardAttribute extends CustomAttribute {\n  constructor(...data) {\n    super(null, null, null, ...data);\n  }\n}\n\nclass PositionAttribute extends NardAttribute {\n  static label = \"POSITION\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nclass UvAttribute extends NardAttribute {\n  static label = \"UV\";\n  static type = \"VEC2\";\n  static componentType = 5126;\n}\n\nclass NormalAttribute extends NardAttribute {\n  static label = \"NORMAL\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nexport {\n  AttributeCollection,\n  PositionAttribute,\n  UvAttribute,\n  NormalAttribute,\n  CustomAttribute\n};\n","class Uniform {\n  constructor(conf) {\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  check() {\n    if (!this.gl || !this.program) {\n      throw new Error(\"Uniform needs to be bound to context and program\");\n    }\n  }\n\n  toGLSL() {\n    const getType = type =>\n      ({\n        \"1f\": \"float\",\n        \"1fv\": \"float\",\n        \"2f\": \"vec2\",\n        \"2fv\": \"vec2\",\n        \"3f\": \"vec3\",\n        \"3fv\": \"vec3\",\n        \"4f\": \"vec4\",\n        \"4fv\": \"vec4\",\n        Matrix2fv: \"mat2\",\n        Matrix3fv: \"mat3\",\n        Matrix4fv: \"mat4\",\n        \"1i\": \"int\",\n        \"1iv\": \"int\",\n        \"2i\": \"ivec2\",\n        \"2iv\": \"ivec2\",\n        \"3i\": \"ivec3\",\n        \"3iv\": \"ivec3\",\n        \"4i\": \"ivec4\",\n        \"4iv\": \"ivec4\",\n        \"1u\": \"uint\",\n        \"1uv\": \"uint\",\n        \"2u\": \"uvec2\",\n        \"2uv\": \"uvec2\",\n        \"3u\": \"uvec3\",\n        \"3uv\": \"uvec3\",\n        \"4u\": \"uvec4\",\n        \"4uv\": \"uvec4\"\n      }[type]);\n\n    return `uniform ${getType(this.type)} ${this.name}${\n      this.count > 2 ? `[${this.count}];\\n` : `;\\n`\n    }`;\n  }\n\n  getLocation() {\n    this.check();\n    return this.gl.getUniformLocation(this.program, this.name);\n  }\n\n  update(data = this.value) {\n    this.check();\n    this.passUniforms({\n      location: this.getLocation(),\n      type: this.type,\n      data: [data]\n    });\n  }\n\n  preSet() {}\n\n  passUniforms(options) {\n    this.check();\n    const gl = this.gl;\n    const { location, data, type } = options;\n\n    try {\n      gl[`uniform${type}`];\n    } catch (err) {\n      throw err;\n    }\n    this.preSet();\n    //console.log(type, location, data);\n    switch (type) {\n      case \"Matrix2fv\":\n      case \"Matrix2x3fv\":\n      case \"Matrix2x4fv\":\n      case \"Matrix3fv\":\n      case \"Matrix3x2fv\":\n      case \"Matrix3x4fv\":\n      case \"Matrix4fv\":\n      case \"Matrix4x2fv\":\n      case \"Matrix4x3fv\":\n        gl[`uniform${type}`](location, false, [...data[0]]);\n        break;\n\n      default:\n        gl[`uniform${type}`](location, ...data);\n    }\n  }\n}\n\nexport { Uniform };\n","import { Uniform } from \"./Uniform\";\n\nclass TextureUniform extends Uniform {\n  static unitUsed = 0;\n\n  constructor(conf) {\n    super(conf);\n    this.type = \"1i\";\n    this.src = conf.src;\n    this.data = [conf.data];\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    this.texture = this.loadTexture(gl, this.src);\n    this.textureUnit = this.data[0]; //TextureUniform.unitUsed;\n    //this.data = [this.textureUnit];\n    //TextureUniform.unitUsed++;\n    return this;\n  }\n\n  toGLSL() {\n    return `uniform sampler2D ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Fill the texture with a 1x1 gray pixel.\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      1,\n      1,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      new Uint8Array([0, 0, 0, 0.2])\n    );\n\n    // Asynchronously load an image\n    var image = new Image();\n    image.src = path;\n    image.addEventListener(\"load\", function() {\n      // Now that the image has loaded make copy it to the texture.\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        image\n      );\n      gl.generateMipmap(gl.TEXTURE_2D);\n    });\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n  }\n}\n\nexport { TextureUniform };\n","import { TextureUniform } from \"./TextureUniform\";\n\nclass TextureCubeUniform extends TextureUniform {\n  targets = [\n    \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Z\"\n  ];\n\n  constructor(...args) {\n    super(...args);\n  }\n\n  toGLSL() {\n    return `uniform samplerCube ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n    this.targets.forEach(target => {\n      //console.log(target, gl[target]);\n      gl.texImage2D(\n        gl[target],\n        0,\n        gl.RGBA,\n        1,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        new Uint8Array([Math.random(), Math.random(), Math.random(), 1])\n      );\n    });\n\n    const img = new Image();\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    img.crossOrigin = \"anonymous\";\n    img.src = path;\n    img.onerror = function(err) {\n      console.log(err);\n    };\n    img.onload = () => {\n      const width = img.width / 4;\n      const height = width;\n      ctx.canvas.width = width;\n      ctx.canvas.height = height;\n\n      // ctx.canvas.style.position = \"fixed\";\n      // ctx.canvas.style.left = 0;\n      // ctx.canvas.style.top = 0;\n      // ctx.canvas.style.zIndex = 10;\n      // document.body.append(ctx.canvas);\n\n      const facesRects = [\n        { x: 2, y: 1, width, height }, //+x\n        { x: 0, y: 1, width, height }, //-x\n        { x: 1, y: 0, width, height }, //+y\n        { x: 1, y: 2, width, height }, //-Y\n        { x: 1, y: 1, width, height }, //-z\n        { x: 3, y: 1, width, height } //+z\n      ];\n\n      facesRects.map(({ x, y, width, height }, i) => {\n        ctx.drawImage(\n          img,\n          x * width,\n          y * height,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height\n        );\n\n        gl.texImage2D(\n          gl[this.targets[i]],\n          0,\n          gl.RGBA,\n          width,\n          height,\n          0,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          ctx.canvas\n        );\n      });\n\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n      gl.texParameteri(\n        gl.TEXTURE_CUBE_MAP,\n        gl.TEXTURE_MIN_FILTER,\n        gl.LINEAR_MIPMAP_LINEAR\n      );\n    };\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.texture);\n  }\n}\n\nexport { TextureCubeUniform };\n","import { Transform } from \"../Transform\";\nimport { createProgramFromSource } from \"../utils\";\nimport { AttributeCollection } from \"../Attribute\";\nimport { Uniform } from \"../Uniform\";\nimport { TextureUniform } from \"../TextureUniform\";\nimport { TextureCubeUniform } from \"../TextureCubeUniform\";\nimport { m4 } from \"../m4\";\n\nclass Primitive extends Transform {\n  constructor(conf, geometry, material) {\n    super();\n    //stuff to access\n    this.vao = null;\n    this.hasRenderedOnce = false;\n    this.needsUpdate = true;\n\n    //geometry holds the vertices and indices\n\n    if (!conf) {\n      this.material = material;\n      this.geometry = geometry;\n      this.indices = geometry.getIndicesData();\n\n      this.draw = {\n        primitiveType: material.primitiveType,\n        offset: 0,\n        count: geometry.getCount(material.primitiveType)\n      };\n    } else {\n      //material tells what to draw (points, lines, triangles)\n      this.material = conf.material;\n      this.indices = conf.indices || null;\n\n      //draw stuff should come from the material\n      this.draw = conf.draw || {\n        primitiveType: 4,\n        offset: 0,\n        count: 3\n      };\n      this.draw.count = conf.count;\n    }\n  }\n\n  setUniform(name, data) {\n    this.uniforms.find(u => u.name === name).value = data;\n  }\n\n  updateUniform(name, value) {\n    this.uniforms.find(u => u.name === name).update(value);\n  }\n\n  updateUniforms() {\n    this.uniforms.forEach(uniform => {\n      uniform.update();\n    });\n  }\n\n  beforeDraw(dt) {}\n\n  createProgram(gl) {\n    return createProgramFromSource(\n      gl,\n      this.material.vertexShaderSrc(this.attributes, this.uniforms),\n      this.material.fragmentShaderSrc(this.uniforms)\n    );\n  }\n\n  bindUniforms(gl) {\n    return this.uniforms\n      .concat([])\n      .map(uniform => uniform.bind(gl, this.program));\n  }\n\n  bindAttributes(gl) {\n    return this.attributes\n      .concat([])\n      .map(attribute => attribute.bind(gl, this.program));\n  }\n\n  initAttributes(attributesData) {\n    return attributesData.map(a => new AttributeCollection(a));\n  }\n\n  initUniforms(uniformsData, texturesData = []) {\n    const extraUniforms = [\n      {\n        name: \"u_modelMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_viewMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_projectionMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      }\n    ];\n\n    uniformsData = [...uniformsData, ...extraUniforms];\n\n    let uniforms = uniformsData.map(u => new Uniform(u));\n    return [\n      ...uniforms,\n      ...texturesData.map(t => {\n        // return new TextureUniform(t);\n        return t.textureCube\n          ? new TextureCubeUniform(t)\n          : new TextureUniform(t);\n      })\n    ];\n  }\n\n  init(gl) {\n    this.attributes = this.initAttributes(\n      this.material.attributesData || this.geometry.getAttributeData()\n    );\n    this.uniforms = this.initUniforms(\n      this.material.uniformsData,\n      this.material.texturesData\n    );\n    console.log(this.uniforms);\n    this.program = this.createProgram(gl);\n    this.uniforms = this.bindUniforms(gl);\n    this.attributes = this.bindAttributes(gl);\n\n    this.vao = gl.createVertexArray();\n    gl.bindVertexArray(this.vao);\n\n    this.attributes.forEach(attribute => {\n      if (!!attribute.srcData) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, attribute.array, gl.STATIC_DRAW);\n      }\n\n      const conf = {\n        location: attribute.location,\n        size: attribute.size,\n        type: attribute.componentType,\n        normalize: true,\n        stride: attribute.stride,\n        offset: attribute.offset\n      };\n\n      if (this.indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n        const elementsConf = {\n          target: gl.ELEMENT_ARRAY_BUFFER,\n          srcData: new Uint16Array(this.indices.srcData),\n          usage: gl.STATIC_DRAW\n        };\n        gl.bufferData(\n          elementsConf.target,\n          elementsConf.srcData,\n          elementsConf.usage\n        );\n      }\n\n      gl.vertexAttribPointer(\n        conf.location,\n        conf.size,\n        conf.type,\n        conf.normalize,\n        conf.stride,\n        conf.offset\n      );\n\n      gl.enableVertexAttribArray(attribute.location);\n    });\n\n    this.needsUpdate = false;\n  }\n}\n\nexport { Primitive };\n","import { Primitive } from \"./index\";\nimport { PbrMetallicRoughnessMaterial } from \"../Material/PbrMetallicRoughnessMaterial\";\n\nclass GltfPrimitive extends Primitive {\n  constructor(primitiveData, textureData = [], vertexPartial, fragmentPartial) {\n    const material = new PbrMetallicRoughnessMaterial(\n      primitiveData.attributes,\n      [],\n      textureData,\n      vertexPartial,\n      fragmentPartial\n    );\n    const conf = {\n      count: primitiveData.attributes[0].count, //POSITION, maybe..\n      material,\n      indices: primitiveData.indices\n    };\n    super(conf);\n  }\n}\n\nexport { GltfPrimitive };\n","import { resizeCanvas, debounce } from \"./utils\";\nimport { m4 } from \"./m4\";\n\nclass WebGLRenderer {\n  constructor(canvas = document.createElement(\"canvas\")) {\n    const gl = canvas.getContext(\"webgl2\");\n\n    //Create full bleed canvas if no canvas provided\n    if (canvas.parentNode !== document.body) {\n      gl.canvas.style.width = \"100vw\";\n      gl.canvas.style.height = \"100vh\";\n      document.body.style.overflow = \"hidden\";\n      document.body.style.margin = 0;\n      document.body.appendChild(gl.canvas);\n    }\n\n    this.gl = gl;\n\n    this.onResize();\n    window.addEventListener(\"resize\", debounce(this.onResize, 250));\n  }\n\n  onResize = () => {\n    this.projectionMatrix = m4.projection(\n      this.gl.canvas.clientWidth,\n      this.gl.canvas.clientHeight,\n      this.gl.canvas.clientWidth\n    );\n    resizeCanvas(this.gl.canvas);\n  };\n\n  render(scene, camera) {\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    this.gl.clearColor(1, 1, 1, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n    // turn on depth testing\n    this.gl.enable(this.gl.DEPTH_TEST);\n\n    scene.forEach(primitive => {\n      if (primitive.needsUpdate) {\n        primitive.init(this.gl);\n      }\n\n      this.gl.useProgram(primitive.program);\n\n      if (!primitive.hasRenderedOnce) {\n        primitive.updateUniforms();\n        primitive.hasRenderedOnce = true;\n      }\n\n      this.gl.bindVertexArray(primitive.vao);\n\n      primitive.setUniform(\"u_projectionMatrix\", this.projectionMatrix);\n      primitive.setUniform(\"u_viewMatrix\", camera.viewMatrix);\n      primitive.computeMatrix();\n      primitive.beforeDraw(this.then);\n\n      primitive.updateUniforms();\n\n      const drawConf = {\n        primitiveType:\n          primitive.draw.primitiveType !== \"undefined\"\n            ? primitive.draw.primitiveType\n            : this.gl.TRIANGLES,\n        offset: primitive.draw.offset,\n        count: primitive.draw.count\n      };\n\n      if (primitive.indices) {\n        this.gl.drawElements(\n          drawConf.primitiveType,\n          primitive.indices.srcData.length,\n          this.gl.UNSIGNED_SHORT,\n          0\n        );\n      } else {\n        this.gl.drawArrays(\n          drawConf.primitiveType,\n          drawConf.offset,\n          drawConf.count\n        );\n      }\n    });\n  }\n}\n\nexport { WebGLRenderer };\n","class Vertex {\n  constructor(x, y, z, attributes) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.attributes = attributes;\n  }\n\n  get attributesStride() {\n    return this.attributes.reduce((acc, { spaceTaken }) => {\n      console.log(spaceTaken);\n      return acc + spaceTaken;\n    }, 0);\n  }\n}\n\nexport { Vertex };\n","import { Vertex } from \"./Vertex\";\n\nconst noPartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.forEach(attribute => {\n      const entries = map.get(attribute.name) || { srcData: [] };\n\n      // attribute.count = vertices.size;\n      // attribute.srcData = [...entries.srcData, ...attribute.data];\n      // attribute.stride = 0;\n      // attribute.offset = 0;\n      // attribute.elementsPerAttribute = attribute.data.length;\n      // map.set(attribute.name, attribute);\n\n      attribute.elementsPerAttribute = attribute.data.length;\n      map.set(attribute.name, {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: vertices.size,\n        srcData: [...entries.srcData, ...attribute.data],\n        stride: 0,\n        offset: 0,\n        spaceTaken: attribute.spaceTaken\n      });\n    });\n\n    return map;\n  };\n};\n\nconst simplePartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.attributes.forEach(attribute => {\n      let entry = map.get(attribute.name);\n\n      attribute.count = vertices.size;\n\n      if (entry && attribute.srcData) {\n        entry.srcData = [...entry.srcData, ...attribute.srcData];\n      }\n\n      if (!entry) {\n        map.set(attribute.name, attribute);\n        entry = attribute;\n      }\n    });\n\n    return map;\n  };\n};\n\nconst getAttributeOffset = function(attributes, i) {\n  const slice = attributes.slice(0, i);\n  return slice.length === 0\n    ? 0\n    : slice.reduce((acc, curr) => acc + curr.spaceTaken, 0);\n};\n\nclass Geometry {\n  static POSITION = \"POSITION\";\n  static NO_PARTITION = \"NO_PARTITION\";\n  static SIMPLE_PARTITION = \"SIMPLE_PARTITION\";\n\n  constructor(partitionStyle = Geometry.NO_PARTITION) {\n    this.partitionStyle = partitionStyle;\n    this.vertices = new Map();\n    this.count = 0;\n  }\n\n  setVertices(vertexArr) {\n    //Array of Vertex Objects\n    this.vertices = new Map();\n    this.count = 0;\n    if (vertexArr) {\n      vertexArr.forEach(vertex => {\n        const { x, y, z } = vertex;\n        this.addVertex(x, y, z, vertex);\n      });\n    }\n  }\n\n  addVertex(x, y, z, vertex) {\n    vertex.index = this.count++;\n    this.vertices.set(JSON.stringify({ x, y, z }), vertex);\n  }\n\n  getVertex(x, y, z) {\n    return this.vertices.get(JSON.stringify({ x, y, z }));\n  }\n\n  getAttributeData() {\n    let attributesMap;\n    if (this.partitionStyle === Geometry.NO_PARTITION) {\n      attributesMap = Array.from(this.vertices.values())\n        .map(({ attributes }) => attributes)\n        .reduce(noPartitionAttributeReduceFn(this.vertices), new Map());\n    } else {\n      attributesMap = Array.from(this.vertices.values())\n        .map(vertex => {\n          const { attributes } = vertex;\n          attributes[0].srcData = [];\n          const stride = attributes.reduce((acc, curr) => {\n            return acc + curr.spaceTaken;\n          }, 0);\n          attributes.forEach((current, i, attributes) => {\n            attributes[0].srcData = [...attributes[0].srcData, ...current.data];\n            current.stride = stride;\n            current.offset = getAttributeOffset(attributes, i);\n          });\n\n          return vertex;\n        })\n        .reduce(simplePartitionAttributeReduceFn(this.vertices), new Map());\n    }\n\n    return Array.from(attributesMap.values()).map(attribute => {\n      const obj = {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: attribute.count,\n        stride: attribute.stride,\n        offset: attribute.offset,\n        spaceTaken: attribute.spaceTaken\n      };\n\n      if (attribute.srcData) {\n        obj[\"srcData\"] = attribute.srcData;\n      }\n\n      return obj;\n    });\n  }\n\n  getIndicesData() {\n    return null;\n  }\n\n  getCount(primitiveType) {\n    return {\n      0: this.vertices.size,\n      1: this.vertices.size,\n      4: this.vertices.size\n    }[primitiveType];\n  }\n}\n\nexport { Geometry };\n","export * from \"./Camera\";\nexport * from \"./Material\";\nexport * from \"./Material/BasicMaterial\";\nexport * from \"./Material/PbrMetallicRoughnessMaterial\";\nexport * from \"./Primitive\";\nexport * from \"./Primitive/GltfPrimitive\";\nexport * from \"./Shader\";\nexport * from \"./Transform\";\nexport * from \"./Attribute\";\nexport * from \"./m4\";\nexport * from \"./TextureUniform\";\nexport * from \"./TextureCubeUniform\";\nexport * from \"./Uniform\";\nexport * from \"./utils\";\nexport * from \"./WebGLRenderer\";\nexport * from \"./Geometry\";\nexport * from \"./Vertex\";\n","class GltfParser {\n  constructor(gltf) {\n    gltf.buffers.forEach(b => {\n      b.data = this.parseB64Buffer(b);\n    });\n\n    gltf.accessors.forEach((accessor, i) => {\n      let itemsPerType = this.getItemsPerType(accessor.type);\n\n      let elementBytesLength = this.getComponentArrayType(\n        accessor.componentType\n      ).BYTES_PER_ELEMENT;\n\n      let typedGetter = this.getDvMethodToRun(accessor.componentType);\n      const length = itemsPerType * accessor.count;\n\n      accessor.srcData = this.unpackBufferViewData(\n        gltf,\n        length,\n        elementBytesLength,\n        typedGetter,\n        accessor.bufferView\n      );\n\n      //console.log(accessor.data.map(d => d.toFixed(1)));\n    });\n\n    if (gltf.images) {\n      gltf.images.forEach(image => {\n        const elementBytesLength = 1;\n        const typedGetter = \"getUint8\";\n        const length = gltf.bufferViews[image.bufferView].byteLength;\n\n        image.srcData = this.unpackBufferViewData(\n          gltf,\n          length,\n          elementBytesLength,\n          typedGetter,\n          image.bufferView\n        );\n\n        image.src = this.uint8ToUrl(image.srcData, image.mimeType);\n      });\n    }\n\n    if (gltf.materials) {\n      gltf.materials.forEach(material => {\n        const textureId = material.pbrMetallicRoughness.baseColorTexture.index;\n        const texture = gltf.images[gltf.textures[textureId].source].src;\n        const uvsAttributeName = `TEXTCOORD_${\n          material.pbrMetallicRoughness.baseColorTexture.texCoord\n        }`;\n        material.pbrMetallicRoughness.baseColorTexture.texture = texture;\n        material.pbrMetallicRoughness.baseColorTexture.uvsAttributeName = uvsAttributeName;\n      });\n    }\n    //console.log(gltf);\n    this.gltf = gltf;\n  }\n\n  parseB64Buffer(buffer) {\n    let b64 = buffer.uri;\n\n    let byteCharacters = atob(b64.split(\",\")[1]);\n    let dv = new DataView(new ArrayBuffer(byteCharacters.length));\n\n    Array.from(byteCharacters).forEach((char, i) => {\n      dv.setUint8(i, char.charCodeAt(0));\n    });\n\n    return dv;\n  }\n\n  unpackBufferViewData(\n    gltf,\n    length,\n    elementBytesLength,\n    typedGetter,\n    bufferView\n  ) {\n    let bufferId = gltf.bufferViews[bufferView].buffer;\n    let offset = gltf.bufferViews[bufferView].byteOffset;\n\n    let dv = gltf.buffers[bufferId].data;\n    return Array.from({\n      length\n    }).map((el, i) => {\n      var loopOffset = offset + Math.max(0, elementBytesLength * i);\n      return dv[typedGetter](loopOffset, true);\n    });\n  }\n\n  getComponentArrayType(id) {\n    return {\n      5123: Uint16Array,\n      5126: Float32Array\n    }[id];\n  }\n\n  getDvMethodToRun(id) {\n    return {\n      5123: \"getUint16\",\n      5126: \"getFloat32\"\n    }[id];\n  }\n\n  getItemsPerType(type) {\n    return {\n      SCALAR: 1,\n      VEC2: 2,\n      VEC3: 3,\n      VEC4: 4\n    }[type];\n  }\n\n  //mesh > primitives > material.pbrMetallicRoughness.baseColorTexture > texture > images\n  getPrimitives(meshId = 0) {\n    //from mesh id\n    const primitives = this.gltf.meshes[meshId].primitives;\n\n    primitives.forEach(primitive => {\n      primitive.attributes = Object.keys(primitive.attributes).map(name => ({\n        name,\n        ...this.gltf.accessors[primitive.attributes[name]]\n      }));\n      primitive.indices = { ...this.gltf.accessors[primitive.indices] };\n      if (typeof primitive.material !== \"undefined\") {\n        primitive.material = this.gltf.materials[primitive.material];\n      }\n    });\n    return primitives;\n  }\n\n  uint8ToUrl(byteArray, type) {\n    var data = new Uint8Array(byteArray);\n    var blob = new Blob([data], { type });\n    return URL.createObjectURL(blob);\n  }\n}\n\nexport { GltfParser };\n","module.exports=\"#define GLSLIFY 1\\nin vec4 color;\\nout vec4 finalColor;\\n\\nvoid main(void){\\n\\tfinalColor = vec4(color.rgb, 1.0);\\n}\";","module.exports=\"#define GLSLIFY 1\\nout lowp vec4 color;\\t//Color to send to fragment shader.\\n\\nvoid main(void){\\n\\n\\tgl_Position = u_projectionMatrix * u_viewMatrix * u_modelMatrix * vec4(a_position, 1.0);\\n\\tcolor = vec4(u_colors[ int(a_colors) ], 1.0); //Using the 4th float as a color index.\\n}\";","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","import { vec3, mat4 } from \"gl-matrix\";\n\nfunction reduceArgsWithFn(fn, input) {\n  return function() {\n    return [...arguments].reduce((a, b) => {\n      return fn(a, b);\n    }, input);\n  };\n}\n\nfunction translation(x, y, z) {\n  return mat4.fromTranslation(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction rotationX(rad) {\n  return mat4.fromXRotation(mat4.create(), rad);\n}\n\nfunction rotationY(rad) {\n  return mat4.fromYRotation(mat4.create(), rad);\n}\nfunction rotationZ(rad) {\n  return mat4.fromZRotation(mat4.create(), rad);\n}\n\nfunction scaling(x, y, z) {\n  return mat4.fromScaling(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction identity() {\n  return mat4.create();\n}\n\nfunction projection(width, height, depth) {\n  return mat4.perspective(mat4.create(), 45, width / height, 0.1, depth);\n}\n\nfunction multiply(a, b) {\n  return mat4.multiply(mat4.create(), a, b);\n}\n\nconst multiplyAll = reduceArgsWithFn(multiply, mat4.create());\n\nconst m4 = {\n  projection,\n  translation,\n  scaling,\n  multiply,\n  multiplyAll,\n  identity,\n\n  invert: function(m) {\n    return mat4.invert(mat4.create(), m);\n  },\n\n  translate: function(m, tx, ty, tz) {\n    return m4.multiply(m, m4.translation(tx, ty, tz));\n  },\n\n  rotateX: function(m, angleInRadians) {\n    return m4.multiply(m, rotationX(angleInRadians));\n  },\n\n  rotateY: function(m, angleInRadians) {\n    return m4.multiply(m, rotationY(angleInRadians));\n  },\n\n  rotateZ: function(m, angleInRadians) {\n    return m4.multiply(m, rotationZ(angleInRadians));\n  },\n\n  scale: function(m, sx, sy, sz) {\n    return m4.multiply(m, m4.scaling(sx, sy, sz));\n  }\n};\n\nexport { m4 };\n","import { m4 } from \"../m4\";\n\nclass Transform {\n  constructor() {\n    this.matrix = m4.identity();\n\n    this.translation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.rotation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.scale = {\n      x: 1,\n      y: 1,\n      z: 1\n    };\n  }\n\n  computeMatrix(m = m4.identity()) {\n    let transforms = m4.identity();\n\n    transforms = m4.scale(transforms, this.scale.x, this.scale.y, this.scale.z);\n\n    transforms = m4.rotateX(transforms, this.rotation.x);\n    transforms = m4.rotateY(transforms, this.rotation.y);\n    transforms = m4.rotateZ(transforms, this.rotation.z);\n\n    transforms = m4.translate(\n      transforms,\n      this.translation.x,\n      this.translation.y,\n      this.translation.z\n    );\n    this.matrix = m4.multiply(m, transforms);\n  }\n}\n\nexport { Transform };\n","import { Transform } from \"../Transform\";\nimport { m4 } from \"../m4\";\n\nclass Camera extends Transform {\n  get viewMatrix() {\n    this.computeMatrix();\n    return m4.invert(this.matrix);\n  }\n}\n\nexport { Camera };\n","const createShader = function(gl, type, source) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.log(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n};\n\nconst createProgram = function(gl, vertexShader, fragmentShader) {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.log(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n};\n\nconst createProgramFromSource = function(\n  gl,\n  vertexShaderSrc,\n  fragmentShaderSrc\n) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n  const fragmentShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSrc\n  );\n\n  return createProgram(gl, vertexShader, fragmentShader);\n};\n\nconst resizeCanvas = function(canvas) {\n  var cssToRealPixels = window.devicePixelRatio || 1;\n\n  var displayWidth = Math.floor(canvas.clientWidth * cssToRealPixels);\n  var displayHeight = Math.floor(canvas.clientHeight * cssToRealPixels);\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n};\n\nconst randomInt = function(range) {\n  return Math.floor(Math.random() * range);\n};\n\nconst getSize = function(type) {\n  return {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n  }[type];\n};\n\nconst getGLSLType = function(componentType, type) {\n  const size = getSize(type);\n  return {\n    5126: function(size) {\n      return {\n        1: \"float\",\n        2: \"vec2\",\n        3: \"vec3\",\n        4: \"vec4\"\n      }[size];\n    },\n    5123: function(size) {\n      return {\n        1: \"int\",\n        2: \"ivec2\",\n        3: \"ivec3\",\n        4: \"ivec4\"\n      }[size];\n    }\n  }[componentType](size);\n};\n\nconst getTypedArray = function(srcData, componentType) {\n  return new {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType](srcData);\n};\n\nconst getBytesPerElementOfType = function(componentType) {\n  return {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType].BYTES_PER_ELEMENT;\n};\n\nconst hexToNormalizedRGB = function(number) {\n  return {\n    r: (number & (0xff0000 >> 16)) / 255,\n    g: (number & (0x00ff00 >> 8)) / 255,\n    b: (number & 0x0000ff) / 255\n  };\n};\n\nconst debounce = function(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport {\n  hexToNormalizedRGB,\n  randomInt,\n  resizeCanvas,\n  createProgram,\n  createShader,\n  createProgramFromSource,\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType,\n  debounce\n};\n","import { getGLSLType } from \"../utils\";\n\nclass Shader {\n  constructor(conf) {\n    this.attributes = conf.attributes;\n    this.uniforms = conf.uniforms;\n    this.script = conf.script;\n  }\n\n  get decorated() {\n    throw new Error(\"Use either VertexShader or FragmentShader instances\");\n  }\n}\n\nclass VertexShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.attributes.map(a => a.toGLSL()).join(\"\") +\n      \"\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nclass FragmentShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nexport { Shader, VertexShader, FragmentShader };\n","import { VertexShader, FragmentShader } from \"../Shader\";\n\nclass Material {\n  static POINTS = 0;\n  static LINES = 1;\n  static TRIANGLES = 4;\n  static TRIANGLE_STRIP = 5;\n  static TRIANGLE_FAN = 6;\n\n  //stores material properties\n  constructor(conf) {\n    const defaults = {\n      uniformsData: [],\n      primitiveType: 4 //TRIANGLES\n    };\n    const options = Object.assign({}, defaults, conf);\n    this.vertexShaderPartial = options.vertexShader;\n    this.fragmentShaderPartial = options.fragmentShader;\n    this.primitiveType = options.primitiveType;\n    this.uniformsData = options.uniformsData;\n    this.texturesData = options.texturesData;\n  }\n\n  vertexShaderSrc(attributes, uniforms) {\n    return new VertexShader({\n      attributes,\n      uniforms,\n      script: this.vertexShaderPartial\n    }).decorated;\n  }\n\n  fragmentShaderSrc(uniforms) {\n    return new FragmentShader({\n      uniforms,\n      script: this.fragmentShaderPartial\n    }).decorated;\n  }\n}\n\nexport { Material };\n","import { Material } from \"../index\";\n\nclass BasicMaterial extends Material {\n  constructor(\n    attributesData,\n    uniformsData,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super({\n      uniformsData,\n      texturesData,\n      vertexShader: vertexShaderPartial,\n      fragmentShader: fragmentShaderPartial\n    });\n    this.attributesData = attributesData;\n    this.uniformsData = uniformsData;\n    this.texturesData = texturesData;\n  }\n}\n\nexport { BasicMaterial };\n","import { BasicMaterial } from \"../BasicMaterial\";\n\nclass PbrMetallicRoughnessMaterial extends BasicMaterial {\n  constructor(\n    attributes,\n    uniforms,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super(\n      attributes,\n      uniforms,\n      texturesData,\n      vertexShaderPartial,\n      fragmentShaderPartial\n    );\n  }\n}\n\nexport { PbrMetallicRoughnessMaterial };\n","import {\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType\n} from \"./utils\";\n\nclass AttributeCollection {\n  constructor(conf) {\n    if (conf.count) {\n      delete conf.count;\n    }\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  toGLSL() {\n    return `in ${getGLSLType(this.componentType, this.type)} ${this.name};\\n`;\n  }\n\n  get location() {\n    const location = this.gl.getAttribLocation(this.program, this.name);\n    if (location === -1) {\n      throw new Error(\n        `Maybe not used in shader. Haven't fount the location of the variable name \"${this.name}\"`\n      );\n    }\n    return location;\n  }\n\n  get size() {\n    return getSize(this.type);\n  }\n\n  get count() {\n    return this.srcData ? this.srcData.length / this.size : null;\n  }\n\n  get array() {\n    return getTypedArray(this.srcData, this.componentType);\n  }\n}\n\nclass CustomAttribute {\n  constructor(name, type, componentType, ...data) {\n    this._name = name;\n    this._type = type;\n    this._componentType = componentType;\n    this._data = [...data];\n    this.elementsPerAttribute = null;\n  }\n\n  get name() {\n    return !this._name ? this.constructor.label : this._name;\n  }\n\n  get type() {\n    return !this._type ? this.constructor.type : this._type;\n  }\n\n  get componentType() {\n    return !this._componentType\n      ? this.constructor.componentType\n      : this._componentType;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get spaceTaken() {\n    return this.data.length * getBytesPerElementOfType(this.componentType);\n  }\n}\n\nclass NardAttribute extends CustomAttribute {\n  constructor(...data) {\n    super(null, null, null, ...data);\n  }\n}\n\nclass PositionAttribute extends NardAttribute {\n  static label = \"POSITION\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nclass UvAttribute extends NardAttribute {\n  static label = \"UV\";\n  static type = \"VEC2\";\n  static componentType = 5126;\n}\n\nclass NormalAttribute extends NardAttribute {\n  static label = \"NORMAL\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nexport {\n  AttributeCollection,\n  PositionAttribute,\n  UvAttribute,\n  NormalAttribute,\n  CustomAttribute\n};\n","class Uniform {\n  constructor(conf) {\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  check() {\n    if (!this.gl || !this.program) {\n      throw new Error(\"Uniform needs to be bound to context and program\");\n    }\n  }\n\n  toGLSL() {\n    const getType = type =>\n      ({\n        \"1f\": \"float\",\n        \"1fv\": \"float\",\n        \"2f\": \"vec2\",\n        \"2fv\": \"vec2\",\n        \"3f\": \"vec3\",\n        \"3fv\": \"vec3\",\n        \"4f\": \"vec4\",\n        \"4fv\": \"vec4\",\n        Matrix2fv: \"mat2\",\n        Matrix3fv: \"mat3\",\n        Matrix4fv: \"mat4\",\n        \"1i\": \"int\",\n        \"1iv\": \"int\",\n        \"2i\": \"ivec2\",\n        \"2iv\": \"ivec2\",\n        \"3i\": \"ivec3\",\n        \"3iv\": \"ivec3\",\n        \"4i\": \"ivec4\",\n        \"4iv\": \"ivec4\",\n        \"1u\": \"uint\",\n        \"1uv\": \"uint\",\n        \"2u\": \"uvec2\",\n        \"2uv\": \"uvec2\",\n        \"3u\": \"uvec3\",\n        \"3uv\": \"uvec3\",\n        \"4u\": \"uvec4\",\n        \"4uv\": \"uvec4\"\n      }[type]);\n\n    return `uniform ${getType(this.type)} ${this.name}${\n      this.count > 2 ? `[${this.count}];\\n` : `;\\n`\n    }`;\n  }\n\n  getLocation() {\n    this.check();\n    return this.gl.getUniformLocation(this.program, this.name);\n  }\n\n  update(data = this.value) {\n    this.check();\n    this.passUniforms({\n      location: this.getLocation(),\n      type: this.type,\n      data: [data]\n    });\n  }\n\n  preSet() {}\n\n  passUniforms(options) {\n    this.check();\n    const gl = this.gl;\n    const { location, data, type } = options;\n\n    try {\n      gl[`uniform${type}`];\n    } catch (err) {\n      throw err;\n    }\n    this.preSet();\n    //console.log(type, location, data);\n    switch (type) {\n      case \"Matrix2fv\":\n      case \"Matrix2x3fv\":\n      case \"Matrix2x4fv\":\n      case \"Matrix3fv\":\n      case \"Matrix3x2fv\":\n      case \"Matrix3x4fv\":\n      case \"Matrix4fv\":\n      case \"Matrix4x2fv\":\n      case \"Matrix4x3fv\":\n        gl[`uniform${type}`](location, false, [...data[0]]);\n        break;\n\n      default:\n        gl[`uniform${type}`](location, ...data);\n    }\n  }\n}\n\nexport { Uniform };\n","import { Uniform } from \"./Uniform\";\n\nclass TextureUniform extends Uniform {\n  static unitUsed = 0;\n\n  constructor(conf) {\n    super(conf);\n    this.type = \"1i\";\n    this.src = conf.src;\n    this.data = [conf.data];\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    this.texture = this.loadTexture(gl, this.src);\n    this.textureUnit = this.data[0]; //TextureUniform.unitUsed;\n    //this.data = [this.textureUnit];\n    //TextureUniform.unitUsed++;\n    return this;\n  }\n\n  toGLSL() {\n    return `uniform sampler2D ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Fill the texture with a 1x1 gray pixel.\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      1,\n      1,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      new Uint8Array([0, 0, 0, 0.2])\n    );\n\n    // Asynchronously load an image\n    var image = new Image();\n    image.src = path;\n    image.addEventListener(\"load\", function() {\n      // Now that the image has loaded make copy it to the texture.\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        image\n      );\n      gl.generateMipmap(gl.TEXTURE_2D);\n    });\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n  }\n}\n\nexport { TextureUniform };\n","import { TextureUniform } from \"./TextureUniform\";\n\nclass TextureCubeUniform extends TextureUniform {\n  targets = [\n    \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Z\"\n  ];\n\n  constructor(...args) {\n    super(...args);\n  }\n\n  toGLSL() {\n    return `uniform samplerCube ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n    this.targets.forEach(target => {\n      //console.log(target, gl[target]);\n      gl.texImage2D(\n        gl[target],\n        0,\n        gl.RGBA,\n        1,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        new Uint8Array([Math.random(), Math.random(), Math.random(), 1])\n      );\n    });\n\n    const img = new Image();\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    img.crossOrigin = \"anonymous\";\n    img.src = path;\n    img.onerror = function(err) {\n      console.log(err);\n    };\n    img.onload = () => {\n      const width = img.width / 4;\n      const height = width;\n      ctx.canvas.width = width;\n      ctx.canvas.height = height;\n\n      // ctx.canvas.style.position = \"fixed\";\n      // ctx.canvas.style.left = 0;\n      // ctx.canvas.style.top = 0;\n      // ctx.canvas.style.zIndex = 10;\n      // document.body.append(ctx.canvas);\n\n      const facesRects = [\n        { x: 2, y: 1, width, height }, //+x\n        { x: 0, y: 1, width, height }, //-x\n        { x: 1, y: 0, width, height }, //+y\n        { x: 1, y: 2, width, height }, //-Y\n        { x: 1, y: 1, width, height }, //-z\n        { x: 3, y: 1, width, height } //+z\n      ];\n\n      facesRects.map(({ x, y, width, height }, i) => {\n        ctx.drawImage(\n          img,\n          x * width,\n          y * height,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height\n        );\n\n        gl.texImage2D(\n          gl[this.targets[i]],\n          0,\n          gl.RGBA,\n          width,\n          height,\n          0,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          ctx.canvas\n        );\n      });\n\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n      gl.texParameteri(\n        gl.TEXTURE_CUBE_MAP,\n        gl.TEXTURE_MIN_FILTER,\n        gl.LINEAR_MIPMAP_LINEAR\n      );\n    };\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.texture);\n  }\n}\n\nexport { TextureCubeUniform };\n","import { Transform } from \"../Transform\";\nimport { createProgramFromSource } from \"../utils\";\nimport { AttributeCollection } from \"../Attribute\";\nimport { Uniform } from \"../Uniform\";\nimport { TextureUniform } from \"../TextureUniform\";\nimport { TextureCubeUniform } from \"../TextureCubeUniform\";\nimport { m4 } from \"../m4\";\n\nclass Primitive extends Transform {\n  constructor(conf, geometry, material) {\n    super();\n    //stuff to access\n    this.vao = null;\n    this.hasRenderedOnce = false;\n    this.needsUpdate = true;\n\n    //geometry holds the vertices and indices\n\n    if (!conf) {\n      this.material = material;\n      this.geometry = geometry;\n      this.indices = geometry.getIndicesData();\n\n      this.draw = {\n        primitiveType: material.primitiveType,\n        offset: 0,\n        count: geometry.getCount(material.primitiveType)\n      };\n    } else {\n      //material tells what to draw (points, lines, triangles)\n      this.material = conf.material;\n      this.indices = conf.indices || null;\n\n      //draw stuff should come from the material\n      this.draw = conf.draw || {\n        primitiveType: 4,\n        offset: 0,\n        count: 3\n      };\n      this.draw.count = conf.count;\n    }\n  }\n\n  setUniform(name, data) {\n    this.uniforms.find(u => u.name === name).value = data;\n  }\n\n  updateUniform(name, value) {\n    this.uniforms.find(u => u.name === name).update(value);\n  }\n\n  updateUniforms() {\n    this.uniforms.forEach(uniform => {\n      uniform.update();\n    });\n  }\n\n  beforeDraw(dt) {}\n\n  createProgram(gl) {\n    return createProgramFromSource(\n      gl,\n      this.material.vertexShaderSrc(this.attributes, this.uniforms),\n      this.material.fragmentShaderSrc(this.uniforms)\n    );\n  }\n\n  bindUniforms(gl) {\n    return this.uniforms\n      .concat([])\n      .map(uniform => uniform.bind(gl, this.program));\n  }\n\n  bindAttributes(gl) {\n    return this.attributes\n      .concat([])\n      .map(attribute => attribute.bind(gl, this.program));\n  }\n\n  initAttributes(attributesData) {\n    return attributesData.map(a => new AttributeCollection(a));\n  }\n\n  initUniforms(uniformsData, texturesData = []) {\n    const extraUniforms = [\n      {\n        name: \"u_modelMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_viewMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_projectionMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      }\n    ];\n\n    uniformsData = [...uniformsData, ...extraUniforms];\n\n    let uniforms = uniformsData.map(u => new Uniform(u));\n    return [\n      ...uniforms,\n      ...texturesData.map(t => {\n        // return new TextureUniform(t);\n        return t.textureCube\n          ? new TextureCubeUniform(t)\n          : new TextureUniform(t);\n      })\n    ];\n  }\n\n  init(gl) {\n    this.attributes = this.initAttributes(\n      this.material.attributesData || this.geometry.getAttributeData()\n    );\n    this.uniforms = this.initUniforms(\n      this.material.uniformsData,\n      this.material.texturesData\n    );\n    console.log(this.uniforms);\n    this.program = this.createProgram(gl);\n    this.uniforms = this.bindUniforms(gl);\n    this.attributes = this.bindAttributes(gl);\n\n    this.vao = gl.createVertexArray();\n    gl.bindVertexArray(this.vao);\n\n    this.attributes.forEach(attribute => {\n      if (!!attribute.srcData) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, attribute.array, gl.STATIC_DRAW);\n      }\n\n      const conf = {\n        location: attribute.location,\n        size: attribute.size,\n        type: attribute.componentType,\n        normalize: true,\n        stride: attribute.stride,\n        offset: attribute.offset\n      };\n\n      if (this.indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n        const elementsConf = {\n          target: gl.ELEMENT_ARRAY_BUFFER,\n          srcData: new Uint16Array(this.indices.srcData),\n          usage: gl.STATIC_DRAW\n        };\n        gl.bufferData(\n          elementsConf.target,\n          elementsConf.srcData,\n          elementsConf.usage\n        );\n      }\n\n      gl.vertexAttribPointer(\n        conf.location,\n        conf.size,\n        conf.type,\n        conf.normalize,\n        conf.stride,\n        conf.offset\n      );\n\n      gl.enableVertexAttribArray(attribute.location);\n    });\n\n    this.needsUpdate = false;\n  }\n}\n\nexport { Primitive };\n","import { Primitive } from \"./index\";\nimport { PbrMetallicRoughnessMaterial } from \"../Material/PbrMetallicRoughnessMaterial\";\n\nclass GltfPrimitive extends Primitive {\n  constructor(primitiveData, textureData = [], vertexPartial, fragmentPartial) {\n    const material = new PbrMetallicRoughnessMaterial(\n      primitiveData.attributes,\n      [],\n      textureData,\n      vertexPartial,\n      fragmentPartial\n    );\n    const conf = {\n      count: primitiveData.attributes[0].count, //POSITION, maybe..\n      material,\n      indices: primitiveData.indices\n    };\n    super(conf);\n  }\n}\n\nexport { GltfPrimitive };\n","import { resizeCanvas, debounce } from \"./utils\";\nimport { m4 } from \"./m4\";\n\nclass WebGLRenderer {\n  constructor(canvas = document.createElement(\"canvas\")) {\n    const gl = canvas.getContext(\"webgl2\");\n\n    //Create full bleed canvas if no canvas provided\n    if (canvas.parentNode !== document.body) {\n      gl.canvas.style.width = \"100vw\";\n      gl.canvas.style.height = \"100vh\";\n      document.body.style.overflow = \"hidden\";\n      document.body.style.margin = 0;\n      document.body.appendChild(gl.canvas);\n    }\n\n    this.gl = gl;\n\n    this.onResize();\n    window.addEventListener(\"resize\", debounce(this.onResize, 250));\n  }\n\n  onResize = () => {\n    this.projectionMatrix = m4.projection(\n      this.gl.canvas.clientWidth,\n      this.gl.canvas.clientHeight,\n      this.gl.canvas.clientWidth\n    );\n    resizeCanvas(this.gl.canvas);\n  };\n\n  render(scene, camera) {\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    this.gl.clearColor(1, 1, 1, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n    // turn on depth testing\n    this.gl.enable(this.gl.DEPTH_TEST);\n\n    scene.forEach(primitive => {\n      if (primitive.needsUpdate) {\n        primitive.init(this.gl);\n      }\n\n      this.gl.useProgram(primitive.program);\n\n      if (!primitive.hasRenderedOnce) {\n        primitive.updateUniforms();\n        primitive.hasRenderedOnce = true;\n      }\n\n      this.gl.bindVertexArray(primitive.vao);\n\n      primitive.setUniform(\"u_projectionMatrix\", this.projectionMatrix);\n      primitive.setUniform(\"u_viewMatrix\", camera.viewMatrix);\n      primitive.computeMatrix();\n      primitive.beforeDraw(this.then);\n\n      primitive.updateUniforms();\n\n      const drawConf = {\n        primitiveType:\n          primitive.draw.primitiveType !== \"undefined\"\n            ? primitive.draw.primitiveType\n            : this.gl.TRIANGLES,\n        offset: primitive.draw.offset,\n        count: primitive.draw.count\n      };\n\n      if (primitive.indices) {\n        this.gl.drawElements(\n          drawConf.primitiveType,\n          primitive.indices.srcData.length,\n          this.gl.UNSIGNED_SHORT,\n          0\n        );\n      } else {\n        this.gl.drawArrays(\n          drawConf.primitiveType,\n          drawConf.offset,\n          drawConf.count\n        );\n      }\n    });\n  }\n}\n\nexport { WebGLRenderer };\n","class Vertex {\n  constructor(x, y, z, attributes) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.attributes = attributes;\n  }\n\n  get attributesStride() {\n    return this.attributes.reduce((acc, { spaceTaken }) => {\n      console.log(spaceTaken);\n      return acc + spaceTaken;\n    }, 0);\n  }\n}\n\nexport { Vertex };\n","import { Vertex } from \"./Vertex\";\n\nconst noPartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.forEach(attribute => {\n      const entries = map.get(attribute.name) || { srcData: [] };\n\n      // attribute.count = vertices.size;\n      // attribute.srcData = [...entries.srcData, ...attribute.data];\n      // attribute.stride = 0;\n      // attribute.offset = 0;\n      // attribute.elementsPerAttribute = attribute.data.length;\n      // map.set(attribute.name, attribute);\n\n      attribute.elementsPerAttribute = attribute.data.length;\n      map.set(attribute.name, {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: vertices.size,\n        srcData: [...entries.srcData, ...attribute.data],\n        stride: 0,\n        offset: 0,\n        spaceTaken: attribute.spaceTaken\n      });\n    });\n\n    return map;\n  };\n};\n\nconst simplePartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.attributes.forEach(attribute => {\n      let entry = map.get(attribute.name);\n\n      attribute.count = vertices.size;\n\n      if (entry && attribute.srcData) {\n        entry.srcData = [...entry.srcData, ...attribute.srcData];\n      }\n\n      if (!entry) {\n        map.set(attribute.name, attribute);\n        entry = attribute;\n      }\n    });\n\n    return map;\n  };\n};\n\nconst getAttributeOffset = function(attributes, i) {\n  const slice = attributes.slice(0, i);\n  return slice.length === 0\n    ? 0\n    : slice.reduce((acc, curr) => acc + curr.spaceTaken, 0);\n};\n\nclass Geometry {\n  static POSITION = \"POSITION\";\n  static NO_PARTITION = \"NO_PARTITION\";\n  static SIMPLE_PARTITION = \"SIMPLE_PARTITION\";\n\n  constructor(partitionStyle = Geometry.NO_PARTITION) {\n    this.partitionStyle = partitionStyle;\n    this.vertices = new Map();\n    this.count = 0;\n  }\n\n  setVertices(vertexArr) {\n    //Array of Vertex Objects\n    this.vertices = new Map();\n    this.count = 0;\n    if (vertexArr) {\n      vertexArr.forEach(vertex => {\n        const { x, y, z } = vertex;\n        this.addVertex(x, y, z, vertex);\n      });\n    }\n  }\n\n  addVertex(x, y, z, vertex) {\n    vertex.index = this.count++;\n    this.vertices.set(JSON.stringify({ x, y, z }), vertex);\n  }\n\n  getVertex(x, y, z) {\n    return this.vertices.get(JSON.stringify({ x, y, z }));\n  }\n\n  getAttributeData() {\n    let attributesMap;\n    if (this.partitionStyle === Geometry.NO_PARTITION) {\n      attributesMap = Array.from(this.vertices.values())\n        .map(({ attributes }) => attributes)\n        .reduce(noPartitionAttributeReduceFn(this.vertices), new Map());\n    } else {\n      attributesMap = Array.from(this.vertices.values())\n        .map(vertex => {\n          const { attributes } = vertex;\n          attributes[0].srcData = [];\n          const stride = attributes.reduce((acc, curr) => {\n            return acc + curr.spaceTaken;\n          }, 0);\n          attributes.forEach((current, i, attributes) => {\n            attributes[0].srcData = [...attributes[0].srcData, ...current.data];\n            current.stride = stride;\n            current.offset = getAttributeOffset(attributes, i);\n          });\n\n          return vertex;\n        })\n        .reduce(simplePartitionAttributeReduceFn(this.vertices), new Map());\n    }\n\n    return Array.from(attributesMap.values()).map(attribute => {\n      const obj = {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: attribute.count,\n        stride: attribute.stride,\n        offset: attribute.offset,\n        spaceTaken: attribute.spaceTaken\n      };\n\n      if (attribute.srcData) {\n        obj[\"srcData\"] = attribute.srcData;\n      }\n\n      return obj;\n    });\n  }\n\n  getIndicesData() {\n    return null;\n  }\n\n  getCount(primitiveType) {\n    return {\n      0: this.vertices.size,\n      1: this.vertices.size,\n      4: this.vertices.size\n    }[primitiveType];\n  }\n}\n\nexport { Geometry };\n","export * from \"./Camera\";\nexport * from \"./Material\";\nexport * from \"./Material/BasicMaterial\";\nexport * from \"./Material/PbrMetallicRoughnessMaterial\";\nexport * from \"./Primitive\";\nexport * from \"./Primitive/GltfPrimitive\";\nexport * from \"./Shader\";\nexport * from \"./Transform\";\nexport * from \"./Attribute\";\nexport * from \"./m4\";\nexport * from \"./TextureUniform\";\nexport * from \"./TextureCubeUniform\";\nexport * from \"./Uniform\";\nexport * from \"./utils\";\nexport * from \"./WebGLRenderer\";\nexport * from \"./Geometry\";\nexport * from \"./Vertex\";\n","import fragmentShaderPartial from \"./fragment.glsl\";\nimport vertexShaderPartial from \"./vertex.glsl\";\nimport { BasicMaterial, Primitive } from \"@nardgl/core\";\n\nlet srcData = [\n  0,\n  -1,\n  0,\n  3,\n\n  0,\n  1,\n  0,\n  3,\n\n  0,\n  0,\n  -1,\n  2,\n\n  0,\n  0,\n  1,\n  2,\n\n  -1,\n  0,\n  0,\n  1,\n\n  1,\n  0,\n  0,\n  1\n];\nlet subDiv = 14;\nlet step = 2 / subDiv;\n\nfor (var i = step; i <= 1; i += step) {\n  let verticals = [i, 1, 0, 0, i, -1, 0, 0, -i, 1, 0, 0, -i, -1, 0, 0];\n  let horizontals = [1, i, 0, 0, -1, i, 0, 0, 1, -i, 0, 0, -1, -i, 0, 0];\n  srcData = [...srcData, ...verticals, ...horizontals];\n}\n\nconst count = srcData.length / 4;\n\nconst attributesData = [\n  {\n    name: \"a_position\",\n    type: \"VEC3\",\n    componentType: 5126,\n    count,\n    srcData,\n    stride: Float32Array.BYTES_PER_ELEMENT * 4,\n    offset: 0\n  },\n  {\n    name: \"a_colors\",\n    type: \"SCALAR\",\n    componentType: 5126,\n    count,\n    stride: Float32Array.BYTES_PER_ELEMENT * 4,\n    offset: Float32Array.BYTES_PER_ELEMENT * 3\n  }\n];\n\nconst uniformsData = [\n  {\n    name: \"u_colors\",\n    type: \"3fv\",\n    value: [0.8, 0.8, 0.8, 1, 0, 0, 0, 1, 0, 0, 0, 1],\n    count: 4\n  }\n];\n\nconst material = new BasicMaterial(\n  attributesData,\n  uniformsData,\n  [],\n  vertexShaderPartial,\n  fragmentShaderPartial\n);\n\nconst conf = {\n  material,\n  count,\n  draw: {\n    primitiveType: 1,\n    offset: 0\n  }\n};\n\nclass Grid extends Primitive {\n  constructor() {\n    super(conf);\n  }\n\n  beforeDraw() {\n    this.setUniform(\"u_modelMatrix\", this.matrix);\n  }\n}\n\nexport { Grid };\n","export * from \"./Grid\";\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","import { vec3, mat4 } from \"gl-matrix\";\n\nfunction reduceArgsWithFn(fn, input) {\n  return function() {\n    return [...arguments].reduce((a, b) => {\n      return fn(a, b);\n    }, input);\n  };\n}\n\nfunction translation(x, y, z) {\n  return mat4.fromTranslation(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction rotationX(rad) {\n  return mat4.fromXRotation(mat4.create(), rad);\n}\n\nfunction rotationY(rad) {\n  return mat4.fromYRotation(mat4.create(), rad);\n}\nfunction rotationZ(rad) {\n  return mat4.fromZRotation(mat4.create(), rad);\n}\n\nfunction scaling(x, y, z) {\n  return mat4.fromScaling(mat4.create(), vec3.fromValues(x, y, z));\n}\n\nfunction identity() {\n  return mat4.create();\n}\n\nfunction projection(width, height, depth) {\n  return mat4.perspective(mat4.create(), 45, width / height, 0.1, depth);\n}\n\nfunction multiply(a, b) {\n  return mat4.multiply(mat4.create(), a, b);\n}\n\nconst multiplyAll = reduceArgsWithFn(multiply, mat4.create());\n\nconst m4 = {\n  projection,\n  translation,\n  scaling,\n  multiply,\n  multiplyAll,\n  identity,\n\n  invert: function(m) {\n    return mat4.invert(mat4.create(), m);\n  },\n\n  translate: function(m, tx, ty, tz) {\n    return m4.multiply(m, m4.translation(tx, ty, tz));\n  },\n\n  rotateX: function(m, angleInRadians) {\n    return m4.multiply(m, rotationX(angleInRadians));\n  },\n\n  rotateY: function(m, angleInRadians) {\n    return m4.multiply(m, rotationY(angleInRadians));\n  },\n\n  rotateZ: function(m, angleInRadians) {\n    return m4.multiply(m, rotationZ(angleInRadians));\n  },\n\n  scale: function(m, sx, sy, sz) {\n    return m4.multiply(m, m4.scaling(sx, sy, sz));\n  }\n};\n\nexport { m4 };\n","import { m4 } from \"../m4\";\n\nclass Transform {\n  constructor() {\n    this.matrix = m4.identity();\n\n    this.translation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.rotation = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    this.scale = {\n      x: 1,\n      y: 1,\n      z: 1\n    };\n  }\n\n  computeMatrix(m = m4.identity()) {\n    let transforms = m4.identity();\n\n    transforms = m4.scale(transforms, this.scale.x, this.scale.y, this.scale.z);\n\n    transforms = m4.rotateX(transforms, this.rotation.x);\n    transforms = m4.rotateY(transforms, this.rotation.y);\n    transforms = m4.rotateZ(transforms, this.rotation.z);\n\n    transforms = m4.translate(\n      transforms,\n      this.translation.x,\n      this.translation.y,\n      this.translation.z\n    );\n    this.matrix = m4.multiply(m, transforms);\n  }\n}\n\nexport { Transform };\n","import { Transform } from \"../Transform\";\nimport { m4 } from \"../m4\";\n\nclass Camera extends Transform {\n  get viewMatrix() {\n    this.computeMatrix();\n    return m4.invert(this.matrix);\n  }\n}\n\nexport { Camera };\n","const createShader = function(gl, type, source) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.log(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n};\n\nconst createProgram = function(gl, vertexShader, fragmentShader) {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.log(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n};\n\nconst createProgramFromSource = function(\n  gl,\n  vertexShaderSrc,\n  fragmentShaderSrc\n) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSrc);\n  const fragmentShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSrc\n  );\n\n  return createProgram(gl, vertexShader, fragmentShader);\n};\n\nconst resizeCanvas = function(canvas) {\n  var cssToRealPixels = window.devicePixelRatio || 1;\n\n  var displayWidth = Math.floor(canvas.clientWidth * cssToRealPixels);\n  var displayHeight = Math.floor(canvas.clientHeight * cssToRealPixels);\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n};\n\nconst randomInt = function(range) {\n  return Math.floor(Math.random() * range);\n};\n\nconst getSize = function(type) {\n  return {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n  }[type];\n};\n\nconst getGLSLType = function(componentType, type) {\n  const size = getSize(type);\n  return {\n    5126: function(size) {\n      return {\n        1: \"float\",\n        2: \"vec2\",\n        3: \"vec3\",\n        4: \"vec4\"\n      }[size];\n    },\n    5123: function(size) {\n      return {\n        1: \"int\",\n        2: \"ivec2\",\n        3: \"ivec3\",\n        4: \"ivec4\"\n      }[size];\n    }\n  }[componentType](size);\n};\n\nconst getTypedArray = function(srcData, componentType) {\n  return new {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType](srcData);\n};\n\nconst getBytesPerElementOfType = function(componentType) {\n  return {\n    5126: Float32Array,\n    5123: Uint16Array\n  }[componentType].BYTES_PER_ELEMENT;\n};\n\nconst hexToNormalizedRGB = function(number) {\n  return {\n    r: (number & (0xff0000 >> 16)) / 255,\n    g: (number & (0x00ff00 >> 8)) / 255,\n    b: (number & 0x0000ff) / 255\n  };\n};\n\nconst debounce = function(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport {\n  hexToNormalizedRGB,\n  randomInt,\n  resizeCanvas,\n  createProgram,\n  createShader,\n  createProgramFromSource,\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType,\n  debounce\n};\n","import { getGLSLType } from \"../utils\";\n\nclass Shader {\n  constructor(conf) {\n    this.attributes = conf.attributes;\n    this.uniforms = conf.uniforms;\n    this.script = conf.script;\n  }\n\n  get decorated() {\n    throw new Error(\"Use either VertexShader or FragmentShader instances\");\n  }\n}\n\nclass VertexShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.attributes.map(a => a.toGLSL()).join(\"\") +\n      \"\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nclass FragmentShader extends Shader {\n  get decorated() {\n    return (\n      \"#version 300 es\\n\" +\n      \"precision mediump float;\\n\" +\n      this.uniforms.map(u => u.toGLSL()).join(\"\") +\n      \"\\n\" +\n      `${this.script}`\n    );\n  }\n}\n\nexport { Shader, VertexShader, FragmentShader };\n","import { VertexShader, FragmentShader } from \"../Shader\";\n\nclass Material {\n  static POINTS = 0;\n  static LINES = 1;\n  static TRIANGLES = 4;\n  static TRIANGLE_STRIP = 5;\n  static TRIANGLE_FAN = 6;\n\n  //stores material properties\n  constructor(conf) {\n    const defaults = {\n      uniformsData: [],\n      primitiveType: 4 //TRIANGLES\n    };\n    const options = Object.assign({}, defaults, conf);\n    this.vertexShaderPartial = options.vertexShader;\n    this.fragmentShaderPartial = options.fragmentShader;\n    this.primitiveType = options.primitiveType;\n    this.uniformsData = options.uniformsData;\n    this.texturesData = options.texturesData;\n  }\n\n  vertexShaderSrc(attributes, uniforms) {\n    return new VertexShader({\n      attributes,\n      uniforms,\n      script: this.vertexShaderPartial\n    }).decorated;\n  }\n\n  fragmentShaderSrc(uniforms) {\n    return new FragmentShader({\n      uniforms,\n      script: this.fragmentShaderPartial\n    }).decorated;\n  }\n}\n\nexport { Material };\n","import { Material } from \"../index\";\n\nclass BasicMaterial extends Material {\n  constructor(\n    attributesData,\n    uniformsData,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super({\n      uniformsData,\n      texturesData,\n      vertexShader: vertexShaderPartial,\n      fragmentShader: fragmentShaderPartial\n    });\n    this.attributesData = attributesData;\n    this.uniformsData = uniformsData;\n    this.texturesData = texturesData;\n  }\n}\n\nexport { BasicMaterial };\n","import { BasicMaterial } from \"../BasicMaterial\";\n\nclass PbrMetallicRoughnessMaterial extends BasicMaterial {\n  constructor(\n    attributes,\n    uniforms,\n    texturesData = [],\n    vertexShaderPartial,\n    fragmentShaderPartial\n  ) {\n    super(\n      attributes,\n      uniforms,\n      texturesData,\n      vertexShaderPartial,\n      fragmentShaderPartial\n    );\n  }\n}\n\nexport { PbrMetallicRoughnessMaterial };\n","import {\n  getSize,\n  getTypedArray,\n  getGLSLType,\n  getBytesPerElementOfType\n} from \"./utils\";\n\nclass AttributeCollection {\n  constructor(conf) {\n    if (conf.count) {\n      delete conf.count;\n    }\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  toGLSL() {\n    return `in ${getGLSLType(this.componentType, this.type)} ${this.name};\\n`;\n  }\n\n  get location() {\n    const location = this.gl.getAttribLocation(this.program, this.name);\n    if (location === -1) {\n      throw new Error(\n        `Maybe not used in shader. Haven't fount the location of the variable name \"${this.name}\"`\n      );\n    }\n    return location;\n  }\n\n  get size() {\n    return getSize(this.type);\n  }\n\n  get count() {\n    return this.srcData ? this.srcData.length / this.size : null;\n  }\n\n  get array() {\n    return getTypedArray(this.srcData, this.componentType);\n  }\n}\n\nclass CustomAttribute {\n  constructor(name, type, componentType, ...data) {\n    this._name = name;\n    this._type = type;\n    this._componentType = componentType;\n    this._data = [...data];\n    this.elementsPerAttribute = null;\n  }\n\n  get name() {\n    return !this._name ? this.constructor.label : this._name;\n  }\n\n  get type() {\n    return !this._type ? this.constructor.type : this._type;\n  }\n\n  get componentType() {\n    return !this._componentType\n      ? this.constructor.componentType\n      : this._componentType;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get spaceTaken() {\n    return this.data.length * getBytesPerElementOfType(this.componentType);\n  }\n}\n\nclass NardAttribute extends CustomAttribute {\n  constructor(...data) {\n    super(null, null, null, ...data);\n  }\n}\n\nclass PositionAttribute extends NardAttribute {\n  static label = \"POSITION\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nclass UvAttribute extends NardAttribute {\n  static label = \"UV\";\n  static type = \"VEC2\";\n  static componentType = 5126;\n}\n\nclass NormalAttribute extends NardAttribute {\n  static label = \"NORMAL\";\n  static type = \"VEC3\";\n  static componentType = 5126;\n}\n\nexport {\n  AttributeCollection,\n  PositionAttribute,\n  UvAttribute,\n  NormalAttribute,\n  CustomAttribute\n};\n","class Uniform {\n  constructor(conf) {\n    for (var key in conf) {\n      this[key] = conf[key];\n    }\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    return this;\n  }\n\n  check() {\n    if (!this.gl || !this.program) {\n      throw new Error(\"Uniform needs to be bound to context and program\");\n    }\n  }\n\n  toGLSL() {\n    const getType = type =>\n      ({\n        \"1f\": \"float\",\n        \"1fv\": \"float\",\n        \"2f\": \"vec2\",\n        \"2fv\": \"vec2\",\n        \"3f\": \"vec3\",\n        \"3fv\": \"vec3\",\n        \"4f\": \"vec4\",\n        \"4fv\": \"vec4\",\n        Matrix2fv: \"mat2\",\n        Matrix3fv: \"mat3\",\n        Matrix4fv: \"mat4\",\n        \"1i\": \"int\",\n        \"1iv\": \"int\",\n        \"2i\": \"ivec2\",\n        \"2iv\": \"ivec2\",\n        \"3i\": \"ivec3\",\n        \"3iv\": \"ivec3\",\n        \"4i\": \"ivec4\",\n        \"4iv\": \"ivec4\",\n        \"1u\": \"uint\",\n        \"1uv\": \"uint\",\n        \"2u\": \"uvec2\",\n        \"2uv\": \"uvec2\",\n        \"3u\": \"uvec3\",\n        \"3uv\": \"uvec3\",\n        \"4u\": \"uvec4\",\n        \"4uv\": \"uvec4\"\n      }[type]);\n\n    return `uniform ${getType(this.type)} ${this.name}${\n      this.count > 2 ? `[${this.count}];\\n` : `;\\n`\n    }`;\n  }\n\n  getLocation() {\n    this.check();\n    return this.gl.getUniformLocation(this.program, this.name);\n  }\n\n  update(data = this.value) {\n    this.check();\n    this.passUniforms({\n      location: this.getLocation(),\n      type: this.type,\n      data: [data]\n    });\n  }\n\n  preSet() {}\n\n  passUniforms(options) {\n    this.check();\n    const gl = this.gl;\n    const { location, data, type } = options;\n\n    try {\n      gl[`uniform${type}`];\n    } catch (err) {\n      throw err;\n    }\n    this.preSet();\n    //console.log(type, location, data);\n    switch (type) {\n      case \"Matrix2fv\":\n      case \"Matrix2x3fv\":\n      case \"Matrix2x4fv\":\n      case \"Matrix3fv\":\n      case \"Matrix3x2fv\":\n      case \"Matrix3x4fv\":\n      case \"Matrix4fv\":\n      case \"Matrix4x2fv\":\n      case \"Matrix4x3fv\":\n        gl[`uniform${type}`](location, false, [...data[0]]);\n        break;\n\n      default:\n        gl[`uniform${type}`](location, ...data);\n    }\n  }\n}\n\nexport { Uniform };\n","import { Uniform } from \"./Uniform\";\n\nclass TextureUniform extends Uniform {\n  static unitUsed = 0;\n\n  constructor(conf) {\n    super(conf);\n    this.type = \"1i\";\n    this.src = conf.src;\n    this.data = [conf.data];\n  }\n\n  bind(gl, program) {\n    this.gl = gl;\n    this.program = program;\n    this.texture = this.loadTexture(gl, this.src);\n    this.textureUnit = this.data[0]; //TextureUniform.unitUsed;\n    //this.data = [this.textureUnit];\n    //TextureUniform.unitUsed++;\n    return this;\n  }\n\n  toGLSL() {\n    return `uniform sampler2D ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Fill the texture with a 1x1 gray pixel.\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      1,\n      1,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      new Uint8Array([0, 0, 0, 0.2])\n    );\n\n    // Asynchronously load an image\n    var image = new Image();\n    image.src = path;\n    image.addEventListener(\"load\", function() {\n      // Now that the image has loaded make copy it to the texture.\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        image\n      );\n      gl.generateMipmap(gl.TEXTURE_2D);\n    });\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n  }\n}\n\nexport { TextureUniform };\n","import { TextureUniform } from \"./TextureUniform\";\n\nclass TextureCubeUniform extends TextureUniform {\n  targets = [\n    \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Z\"\n  ];\n\n  constructor(...args) {\n    super(...args);\n  }\n\n  toGLSL() {\n    return `uniform samplerCube ${this.name};`;\n  }\n\n  loadTexture(gl, path) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n    this.targets.forEach(target => {\n      //console.log(target, gl[target]);\n      gl.texImage2D(\n        gl[target],\n        0,\n        gl.RGBA,\n        1,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        new Uint8Array([Math.random(), Math.random(), Math.random(), 1])\n      );\n    });\n\n    const img = new Image();\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    img.crossOrigin = \"anonymous\";\n    img.src = path;\n    img.onerror = function(err) {\n      console.log(err);\n    };\n    img.onload = () => {\n      const width = img.width / 4;\n      const height = width;\n      ctx.canvas.width = width;\n      ctx.canvas.height = height;\n\n      // ctx.canvas.style.position = \"fixed\";\n      // ctx.canvas.style.left = 0;\n      // ctx.canvas.style.top = 0;\n      // ctx.canvas.style.zIndex = 10;\n      // document.body.append(ctx.canvas);\n\n      const facesRects = [\n        { x: 2, y: 1, width, height }, //+x\n        { x: 0, y: 1, width, height }, //-x\n        { x: 1, y: 0, width, height }, //+y\n        { x: 1, y: 2, width, height }, //-Y\n        { x: 1, y: 1, width, height }, //-z\n        { x: 3, y: 1, width, height } //+z\n      ];\n\n      facesRects.map(({ x, y, width, height }, i) => {\n        ctx.drawImage(\n          img,\n          x * width,\n          y * height,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height\n        );\n\n        gl.texImage2D(\n          gl[this.targets[i]],\n          0,\n          gl.RGBA,\n          width,\n          height,\n          0,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          ctx.canvas\n        );\n      });\n\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n      gl.texParameteri(\n        gl.TEXTURE_CUBE_MAP,\n        gl.TEXTURE_MIN_FILTER,\n        gl.LINEAR_MIPMAP_LINEAR\n      );\n    };\n\n    return texture;\n  }\n\n  preSet() {\n    this.gl.activeTexture(this.gl.TEXTURE0 + this.textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, this.texture);\n  }\n}\n\nexport { TextureCubeUniform };\n","import { Transform } from \"../Transform\";\nimport { createProgramFromSource } from \"../utils\";\nimport { AttributeCollection } from \"../Attribute\";\nimport { Uniform } from \"../Uniform\";\nimport { TextureUniform } from \"../TextureUniform\";\nimport { TextureCubeUniform } from \"../TextureCubeUniform\";\nimport { m4 } from \"../m4\";\n\nclass Primitive extends Transform {\n  constructor(conf, geometry, material) {\n    super();\n    //stuff to access\n    this.vao = null;\n    this.hasRenderedOnce = false;\n    this.needsUpdate = true;\n\n    //geometry holds the vertices and indices\n\n    if (!conf) {\n      this.material = material;\n      this.geometry = geometry;\n      this.indices = geometry.getIndicesData();\n\n      this.draw = {\n        primitiveType: material.primitiveType,\n        offset: 0,\n        count: geometry.getCount(material.primitiveType)\n      };\n    } else {\n      //material tells what to draw (points, lines, triangles)\n      this.material = conf.material;\n      this.indices = conf.indices || null;\n\n      //draw stuff should come from the material\n      this.draw = conf.draw || {\n        primitiveType: 4,\n        offset: 0,\n        count: 3\n      };\n      this.draw.count = conf.count;\n    }\n  }\n\n  setUniform(name, data) {\n    this.uniforms.find(u => u.name === name).value = data;\n  }\n\n  updateUniform(name, value) {\n    this.uniforms.find(u => u.name === name).update(value);\n  }\n\n  updateUniforms() {\n    this.uniforms.forEach(uniform => {\n      uniform.update();\n    });\n  }\n\n  beforeDraw(dt) {}\n\n  createProgram(gl) {\n    return createProgramFromSource(\n      gl,\n      this.material.vertexShaderSrc(this.attributes, this.uniforms),\n      this.material.fragmentShaderSrc(this.uniforms)\n    );\n  }\n\n  bindUniforms(gl) {\n    return this.uniforms\n      .concat([])\n      .map(uniform => uniform.bind(gl, this.program));\n  }\n\n  bindAttributes(gl) {\n    return this.attributes\n      .concat([])\n      .map(attribute => attribute.bind(gl, this.program));\n  }\n\n  initAttributes(attributesData) {\n    return attributesData.map(a => new AttributeCollection(a));\n  }\n\n  initUniforms(uniformsData, texturesData = []) {\n    const extraUniforms = [\n      {\n        name: \"u_modelMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_viewMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      },\n      {\n        name: \"u_projectionMatrix\",\n        type: \"Matrix4fv\",\n        value: m4.identity(),\n        count: 1\n      }\n    ];\n\n    uniformsData = [...uniformsData, ...extraUniforms];\n\n    let uniforms = uniformsData.map(u => new Uniform(u));\n    return [\n      ...uniforms,\n      ...texturesData.map(t => {\n        // return new TextureUniform(t);\n        return t.textureCube\n          ? new TextureCubeUniform(t)\n          : new TextureUniform(t);\n      })\n    ];\n  }\n\n  init(gl) {\n    this.attributes = this.initAttributes(\n      this.material.attributesData || this.geometry.getAttributeData()\n    );\n    this.uniforms = this.initUniforms(\n      this.material.uniformsData,\n      this.material.texturesData\n    );\n    console.log(this.uniforms);\n    this.program = this.createProgram(gl);\n    this.uniforms = this.bindUniforms(gl);\n    this.attributes = this.bindAttributes(gl);\n\n    this.vao = gl.createVertexArray();\n    gl.bindVertexArray(this.vao);\n\n    this.attributes.forEach(attribute => {\n      if (!!attribute.srcData) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, attribute.array, gl.STATIC_DRAW);\n      }\n\n      const conf = {\n        location: attribute.location,\n        size: attribute.size,\n        type: attribute.componentType,\n        normalize: true,\n        stride: attribute.stride,\n        offset: attribute.offset\n      };\n\n      if (this.indices) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n        const elementsConf = {\n          target: gl.ELEMENT_ARRAY_BUFFER,\n          srcData: new Uint16Array(this.indices.srcData),\n          usage: gl.STATIC_DRAW\n        };\n        gl.bufferData(\n          elementsConf.target,\n          elementsConf.srcData,\n          elementsConf.usage\n        );\n      }\n\n      gl.vertexAttribPointer(\n        conf.location,\n        conf.size,\n        conf.type,\n        conf.normalize,\n        conf.stride,\n        conf.offset\n      );\n\n      gl.enableVertexAttribArray(attribute.location);\n    });\n\n    this.needsUpdate = false;\n  }\n}\n\nexport { Primitive };\n","import { Primitive } from \"./index\";\nimport { PbrMetallicRoughnessMaterial } from \"../Material/PbrMetallicRoughnessMaterial\";\n\nclass GltfPrimitive extends Primitive {\n  constructor(primitiveData, textureData = [], vertexPartial, fragmentPartial) {\n    const material = new PbrMetallicRoughnessMaterial(\n      primitiveData.attributes,\n      [],\n      textureData,\n      vertexPartial,\n      fragmentPartial\n    );\n    const conf = {\n      count: primitiveData.attributes[0].count, //POSITION, maybe..\n      material,\n      indices: primitiveData.indices\n    };\n    super(conf);\n  }\n}\n\nexport { GltfPrimitive };\n","import { resizeCanvas, debounce } from \"./utils\";\nimport { m4 } from \"./m4\";\n\nclass WebGLRenderer {\n  constructor(canvas = document.createElement(\"canvas\")) {\n    const gl = canvas.getContext(\"webgl2\");\n\n    //Create full bleed canvas if no canvas provided\n    if (canvas.parentNode !== document.body) {\n      gl.canvas.style.width = \"100vw\";\n      gl.canvas.style.height = \"100vh\";\n      document.body.style.overflow = \"hidden\";\n      document.body.style.margin = 0;\n      document.body.appendChild(gl.canvas);\n    }\n\n    this.gl = gl;\n\n    this.onResize();\n    window.addEventListener(\"resize\", debounce(this.onResize, 250));\n  }\n\n  onResize = () => {\n    this.projectionMatrix = m4.projection(\n      this.gl.canvas.clientWidth,\n      this.gl.canvas.clientHeight,\n      this.gl.canvas.clientWidth\n    );\n    resizeCanvas(this.gl.canvas);\n  };\n\n  render(scene, camera) {\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    this.gl.clearColor(1, 1, 1, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n    // turn on depth testing\n    this.gl.enable(this.gl.DEPTH_TEST);\n\n    scene.forEach(primitive => {\n      if (primitive.needsUpdate) {\n        primitive.init(this.gl);\n      }\n\n      this.gl.useProgram(primitive.program);\n\n      if (!primitive.hasRenderedOnce) {\n        primitive.updateUniforms();\n        primitive.hasRenderedOnce = true;\n      }\n\n      this.gl.bindVertexArray(primitive.vao);\n\n      primitive.setUniform(\"u_projectionMatrix\", this.projectionMatrix);\n      primitive.setUniform(\"u_viewMatrix\", camera.viewMatrix);\n      primitive.computeMatrix();\n      primitive.beforeDraw(this.then);\n\n      primitive.updateUniforms();\n\n      const drawConf = {\n        primitiveType:\n          primitive.draw.primitiveType !== \"undefined\"\n            ? primitive.draw.primitiveType\n            : this.gl.TRIANGLES,\n        offset: primitive.draw.offset,\n        count: primitive.draw.count\n      };\n\n      if (primitive.indices) {\n        this.gl.drawElements(\n          drawConf.primitiveType,\n          primitive.indices.srcData.length,\n          this.gl.UNSIGNED_SHORT,\n          0\n        );\n      } else {\n        this.gl.drawArrays(\n          drawConf.primitiveType,\n          drawConf.offset,\n          drawConf.count\n        );\n      }\n    });\n  }\n}\n\nexport { WebGLRenderer };\n","class Vertex {\n  constructor(x, y, z, attributes) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.attributes = attributes;\n  }\n\n  get attributesStride() {\n    return this.attributes.reduce((acc, { spaceTaken }) => {\n      console.log(spaceTaken);\n      return acc + spaceTaken;\n    }, 0);\n  }\n}\n\nexport { Vertex };\n","import { Vertex } from \"./Vertex\";\n\nconst noPartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.forEach(attribute => {\n      const entries = map.get(attribute.name) || { srcData: [] };\n\n      // attribute.count = vertices.size;\n      // attribute.srcData = [...entries.srcData, ...attribute.data];\n      // attribute.stride = 0;\n      // attribute.offset = 0;\n      // attribute.elementsPerAttribute = attribute.data.length;\n      // map.set(attribute.name, attribute);\n\n      attribute.elementsPerAttribute = attribute.data.length;\n      map.set(attribute.name, {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: vertices.size,\n        srcData: [...entries.srcData, ...attribute.data],\n        stride: 0,\n        offset: 0,\n        spaceTaken: attribute.spaceTaken\n      });\n    });\n\n    return map;\n  };\n};\n\nconst simplePartitionAttributeReduceFn = function(vertices) {\n  return (map, curr) => {\n    curr.attributes.forEach(attribute => {\n      let entry = map.get(attribute.name);\n\n      attribute.count = vertices.size;\n\n      if (entry && attribute.srcData) {\n        entry.srcData = [...entry.srcData, ...attribute.srcData];\n      }\n\n      if (!entry) {\n        map.set(attribute.name, attribute);\n        entry = attribute;\n      }\n    });\n\n    return map;\n  };\n};\n\nconst getAttributeOffset = function(attributes, i) {\n  const slice = attributes.slice(0, i);\n  return slice.length === 0\n    ? 0\n    : slice.reduce((acc, curr) => acc + curr.spaceTaken, 0);\n};\n\nclass Geometry {\n  static POSITION = \"POSITION\";\n  static NO_PARTITION = \"NO_PARTITION\";\n  static SIMPLE_PARTITION = \"SIMPLE_PARTITION\";\n\n  constructor(partitionStyle = Geometry.NO_PARTITION) {\n    this.partitionStyle = partitionStyle;\n    this.vertices = new Map();\n    this.count = 0;\n  }\n\n  setVertices(vertexArr) {\n    //Array of Vertex Objects\n    this.vertices = new Map();\n    this.count = 0;\n    if (vertexArr) {\n      vertexArr.forEach(vertex => {\n        const { x, y, z } = vertex;\n        this.addVertex(x, y, z, vertex);\n      });\n    }\n  }\n\n  addVertex(x, y, z, vertex) {\n    vertex.index = this.count++;\n    this.vertices.set(JSON.stringify({ x, y, z }), vertex);\n  }\n\n  getVertex(x, y, z) {\n    return this.vertices.get(JSON.stringify({ x, y, z }));\n  }\n\n  getAttributeData() {\n    let attributesMap;\n    if (this.partitionStyle === Geometry.NO_PARTITION) {\n      attributesMap = Array.from(this.vertices.values())\n        .map(({ attributes }) => attributes)\n        .reduce(noPartitionAttributeReduceFn(this.vertices), new Map());\n    } else {\n      attributesMap = Array.from(this.vertices.values())\n        .map(vertex => {\n          const { attributes } = vertex;\n          attributes[0].srcData = [];\n          const stride = attributes.reduce((acc, curr) => {\n            return acc + curr.spaceTaken;\n          }, 0);\n          attributes.forEach((current, i, attributes) => {\n            attributes[0].srcData = [...attributes[0].srcData, ...current.data];\n            current.stride = stride;\n            current.offset = getAttributeOffset(attributes, i);\n          });\n\n          return vertex;\n        })\n        .reduce(simplePartitionAttributeReduceFn(this.vertices), new Map());\n    }\n\n    return Array.from(attributesMap.values()).map(attribute => {\n      const obj = {\n        name: attribute.name,\n        componentType: attribute.componentType,\n        type: attribute.type,\n        count: attribute.count,\n        stride: attribute.stride,\n        offset: attribute.offset,\n        spaceTaken: attribute.spaceTaken\n      };\n\n      if (attribute.srcData) {\n        obj[\"srcData\"] = attribute.srcData;\n      }\n\n      return obj;\n    });\n  }\n\n  getIndicesData() {\n    return null;\n  }\n\n  getCount(primitiveType) {\n    return {\n      0: this.vertices.size,\n      1: this.vertices.size,\n      4: this.vertices.size\n    }[primitiveType];\n  }\n}\n\nexport { Geometry };\n","export * from \"./Camera\";\nexport * from \"./Material\";\nexport * from \"./Material/BasicMaterial\";\nexport * from \"./Material/PbrMetallicRoughnessMaterial\";\nexport * from \"./Primitive\";\nexport * from \"./Primitive/GltfPrimitive\";\nexport * from \"./Shader\";\nexport * from \"./Transform\";\nexport * from \"./Attribute\";\nexport * from \"./m4\";\nexport * from \"./TextureUniform\";\nexport * from \"./TextureCubeUniform\";\nexport * from \"./Uniform\";\nexport * from \"./utils\";\nexport * from \"./WebGLRenderer\";\nexport * from \"./Geometry\";\nexport * from \"./Vertex\";\n","import {\n  Geometry,\n  Vertex,\n  PositionAttribute,\n  CustomAttribute,\n  hexToNormalizedRGB,\n  NormalAttribute,\n  UvAttribute\n} from \"@nardgl/core\";\n\nclass PlaneGeometry extends Geometry {\n  constructor(\n    width = 2,\n    height = 2,\n    segmentsW = 1,\n    segmentsH = 1,\n    hexColor = 0x666666,\n    yUp = true,\n    doubleSided = false\n  ) {\n    super();\n    this.width = width;\n    this.height = height;\n    this.segmentsW = segmentsW;\n    this.segmentsH = segmentsH;\n    this.yUp = yUp;\n    this.doubleSided = doubleSided;\n    this._indices = [];\n    this.rgbColor = hexToNormalizedRGB(hexColor);\n    this.buildGeometry();\n  }\n\n  getIndicesData() {\n    //if drawing triangles\n    let srcData = [];\n    for (let y = 0; y <= this.segmentsH - 1; y++) {\n      for (let x = 0; x <= this.segmentsW - 1; x++) {\n        srcData = [\n          ...srcData,\n          this.getVertex(x, y, 0).index,\n          this.getVertex(x + 1, y, 0).index,\n          this.getVertex(x, y + 1, 0).index,\n\n          this.getVertex(x + 1, y, 0).index,\n          this.getVertex(x + 1, y + 1, 0).index,\n          this.getVertex(x, y + 1, 0).index\n        ];\n      }\n    }\n\n    return {\n      componentType: 5123,\n      count: srcData.length,\n      srcData,\n      type: \"SCALAR\"\n    };\n  }\n\n  buildGeometry() {\n    let x, y;\n\n    for (let yi = 0; yi <= this.segmentsH; yi++) {\n      for (let xi = 0; xi <= this.segmentsW; xi++) {\n        x = (xi / this.segmentsW - 0.5) * this.width;\n        y = (yi / this.segmentsH - 0.5) * this.height;\n\n        const u = xi / this.segmentsH;\n        const v = -yi / this.segmentsW;\n        //console.log(u, v);\n        this.addVertex(\n          xi,\n          yi,\n          0,\n          new Vertex(x, y, 0, [\n            new PositionAttribute(x, y, 0),\n            new UvAttribute(u, v)\n            //new NormalAttribute(0, 0, 1),\n            // new CustomAttribute(\n            //   \"COLOR\",\n            //   \"VEC4\",\n            //   5126,\n            //   this.rgbColor.r,\n            //   this.rgbColor.g,\n            //   this.rgbColor.b,\n            //   1\n            // )\n          ])\n        );\n      }\n    }\n  }\n}\n\nexport { PlaneGeometry };\n","import {\n  Geometry,\n  hexToNormalizedRGB,\n  Vertex,\n  PositionAttribute\n} from \"@nardgl/core\";\n\nclass CubeGeometry extends Geometry {\n  constructor(\n    width = 2,\n    height = 2,\n    segmentsW = 1,\n    segmentsH = 1,\n    hexColor = 0x666666\n  ) {\n    super(Geometry.SIMPLE_PARTITION);\n    this.width = width;\n    this.height = height;\n    this.segmentsW = segmentsW;\n    this.segmentsH = segmentsH;\n    //this.doubleSided = doubleSided;\n    this._indices = [];\n    this.rgbColor = hexToNormalizedRGB(hexColor);\n    this.buildGeometry();\n  }\n\n  getIndicesData() {\n    //if drawing triangles\n    let srcData = Array.from({ length: 6 })\n      .map((el, i) => {\n        const faceId = 4 * i;\n        return [faceId, faceId + 1, faceId + 2, faceId + 2, faceId + 3, faceId];\n      })\n      .flat();\n\n    return {\n      componentType: 5123,\n      count: srcData.length,\n      srcData,\n      type: \"SCALAR\"\n    };\n  }\n\n  buildGeometry() {\n    this.setVertices([\n      //positive x\n      new Vertex(1, null, null, [new PositionAttribute(0.5, 0.5, 0.5)]),\n      new Vertex(2, null, null, [new PositionAttribute(0.5, 0.5, -0.5)]),\n      new Vertex(3, null, null, [new PositionAttribute(0.5, -0.5, -0.5)]),\n      new Vertex(4, null, null, [new PositionAttribute(0.5, -0.5, 0.5)]),\n      //negative x\n      new Vertex(5, null, null, [new PositionAttribute(-0.5, 0.5, -0.5)]),\n      new Vertex(6, null, null, [new PositionAttribute(-0.5, 0.5, 0.5)]),\n      new Vertex(7, null, null, [new PositionAttribute(-0.5, -0.5, 0.5)]),\n      new Vertex(8, null, null, [new PositionAttribute(-0.5, -0.5, -0.5)]),\n      //positive y\n      new Vertex(9, null, null, [new PositionAttribute(-0.5, 0.5, -0.5)]),\n      new Vertex(10, null, null, [new PositionAttribute(0.5, 0.5, -0.5)]),\n      new Vertex(11, null, null, [new PositionAttribute(0.5, 0.5, 0.5)]),\n      new Vertex(12, null, null, [new PositionAttribute(-0.5, 0.5, 0.5)]),\n      //negative y\n      new Vertex(13, null, null, [new PositionAttribute(-0.5, -0.5, -0.5)]),\n      new Vertex(14, null, null, [new PositionAttribute(0.5, -0.5, -0.5)]),\n      new Vertex(15, null, null, [new PositionAttribute(0.5, -0.5, 0.5)]),\n      new Vertex(16, null, null, [new PositionAttribute(-0.5, -0.5, 0.5)]),\n      //positive z\n      new Vertex(17, null, null, [new PositionAttribute(-0.5, 0.5, 0.5)]),\n      new Vertex(18, null, null, [new PositionAttribute(0.5, 0.5, 0.5)]),\n      new Vertex(19, null, null, [new PositionAttribute(0.5, -0.5, 0.5)]),\n      new Vertex(20, null, null, [new PositionAttribute(-0.5, -0.5, 0.5)]),\n      //negative z\n      new Vertex(21, null, null, [new PositionAttribute(0.5, 0.5, -0.5)]),\n      new Vertex(22, null, null, [new PositionAttribute(-0.5, 0.5, -0.5)]),\n      new Vertex(23, null, null, [new PositionAttribute(-0.5, -0.5, -0.5)]),\n      new Vertex(24, null, null, [new PositionAttribute(0.5, -0.5, -0.5)])\n    ]);\n  }\n}\n\nexport { CubeGeometry };\n","export * from \"./PlaneGeometry/index.js\";\nexport * from \"./CubeGeometry\";\n","import pkg from \"../package.json\";\nimport consoleGreet from \"@nardgl/console-greeting\";\nconsoleGreet(\"NardGL\", pkg.version);\n\nexport * from \"@nardgl/loader\";\nexport * from \"@nardgl/core\";\nexport * from \"@nardgl/gltf-parser\";\nexport * from \"@nardgl/utils\";\nexport * from \"@nardgl/primitives\";\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n","module.exports=\"#define GLSLIFY 1\\nvoid main() {\\n  gl_PointSize = 25.0;//u_pointSize;\\n  vec4 modelPosition = u_modelMatrix * vec4(a_position, 1.0);\\n\\n  gl_Position = u_projectionMatrix * u_viewMatrix * modelPosition;\\n  //gl_Position = modelViewPosition;\\n}\";","module.exports=\"#define GLSLIFY 1\\nout vec4 outColor;\\n\\nvoid main() {\\n  float r = length(gl_PointCoord.xy - vec2(0.5));\\n  if(r > 0.5) {\\n    discard;\\n  } else {\\n    outColor = vec4(0.0, 0.0, 0.0, 1.0);\\n  }\\n}\";","import vertexShaderPartial from \"./vertex.glsl\";\nimport fragmentShaderPartial from \"./fragment.glsl\";\nimport { Primitive, BasicMaterial } from \"nardgl\";\n\nconst attributesData = [\n  {\n    name: \"a_position\",\n    type: \"VEC3\",\n    componentType: 5126,\n    count: 3,\n    srcData: [0, 0, 0, 0.5, 0.5, 0, -0.5, -0.5, 0],\n    stride: 0,\n    offset: 0\n  }\n];\n\nconst uniformsData = [\n  {\n    name: \"u_pointSize\",\n    type: \"1f\",\n    value: 50,\n    count: 1\n  }\n];\n\nconst material = new BasicMaterial(\n  attributesData,\n  uniformsData,\n  [],\n  vertexShaderPartial,\n  fragmentShaderPartial\n);\n\nconst draw = {\n  primitiveType: 0,\n  offset: 0\n};\n\nconst conf = {\n  material,\n  draw,\n  count: 3\n};\n\nclass Particles extends Primitive {\n  constructor() {\n    super(conf);\n  }\n\n  beforeDraw(dt) {\n    this.setUniform(\"u_modelMatrix\", this.matrix);\n    this.setUniform(\"u_pointSize\", (Math.sin(dt / 1000) * 0.5 + 0.5) * 41);\n  }\n}\n\nexport { Particles };\n","module.exports=\"#define GLSLIFY 1\\nout lowp vec4 color;\\t//Color to send to fragment shader.\\n\\nvoid main() {\\n  color = COLOR_0;\\n  gl_PointSize = 15.0;\\n  vec4 modelPosition = u_modelMatrix * vec4(POSITION, 1.0);\\n  gl_Position = u_projectionMatrix * u_viewMatrix * modelPosition;\\n}\";","module.exports=\"#define GLSLIFY 1\\nin vec4 color;\\nout vec4 finalColor;\\n\\nvoid main(void){\\n\\tfinalColor = vec4(color.rgb, 1.0);\\n}\";","import * as NARD from \"nardgl\";\nimport vertexPartial from \"./vertex.glsl\";\nimport fragmentPartial from \"./fragment.glsl\";\n\nclass Quad extends NARD.GltfPrimitive {\n  constructor(primitiveData) {\n    super(primitiveData, [], vertexPartial, fragmentPartial);\n  }\n\n  beforeDraw() {\n    this.setUniform(\"u_modelMatrix\", this.matrix);\n  }\n}\n\nexport { Quad };\n","module.exports=\"#define GLSLIFY 1\\n//out vec4 color;\\t//Color to send to fragment shader.\\n//out vec3 vNormal; \\nout vec2 vUv;\\n\\nvoid main() {\\n  vec4 modelPosition = u_modelMatrix * vec4(POSITION, 1.0);\\n  gl_Position = u_projectionMatrix * u_viewMatrix * modelPosition;\\n  vUv = TEXCOORD_0;\\n}\";","module.exports=\"#define GLSLIFY 1\\nout vec4 finalColor;\\nin vec2 vUv;\\n\\nvoid main(void){\\n\\t// finalColor = vec4(1.0, 0.0, 0.0, 1.0);\\n\\tfinalColor = texture(u_texture, vUv);\\n}\";","import { GltfPrimitive } from \"nardgl\";\nimport vertexPartial from \"./vertex.glsl\";\nimport fragmentPartial from \"./fragment.glsl\";\n\nclass TexturedCube extends GltfPrimitive {\n  constructor(primitiveData) {\n    primitiveData.attributes = [\n      primitiveData.attributes[0],\n      primitiveData.attributes[2]\n    ];\n\n    super(\n      primitiveData,\n      [\n        {\n          name: \"u_texture\",\n          src:\n            primitiveData.material.pbrMetallicRoughness.baseColorTexture.texture\n        }\n      ],\n      vertexPartial,\n      fragmentPartial\n    );\n  }\n\n  beforeDraw() {\n    this.setUniform(\"u_modelMatrix\", this.matrix);\n  }\n}\n\nexport { TexturedCube };\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}